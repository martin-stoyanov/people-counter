'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hocs = require('grommet/components/hocs');

var _spinners = require('./spinners');

var _StyledSpinning = require('./StyledSpinning');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // ported to styled-componnets from
// https://github.com/KyleAMathews/react-spinkit


var styledComponents = {
  'circle': _StyledSpinning.CircleSpinner,
  'three-bounce': _StyledSpinning.ThreeBounceSpinner,
  'cube-grid': _StyledSpinning.CubeGridSpinner,
  'wave': _StyledSpinning.WaveSpinner,
  'folding-cube': _StyledSpinning.FoldingCubeSpinner,
  'double-bounce': _StyledSpinning.DoubleBounceSpinner,
  'wandering-cubes': _StyledSpinning.WanderingCubesSpinner,
  'chasing-dots': _StyledSpinning.ChasingDotsSpinner,
  'rotating-plane': _StyledSpinning.RotatingPlaneSpinner,
  'pulse': _StyledSpinning.PulseSpinner,
  'wordpress': _StyledSpinning.WordPressSpinner

};

var Spinner = function (_Component) {
  _inherits(Spinner, _Component);

  function Spinner() {
    _classCallCheck(this, Spinner);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Spinner.prototype.render = function render() {
    var _props = this.props,
        kind = _props.kind,
        fadeIn = _props.fadeIn,
        color = _props.color,
        theme = _props.theme,
        size = _props.size;

    var spinnerInfo = _spinners.allSpinners[kind] || _spinners.allSpinners['three-bounce'];
    /* const classes = cx({
      'sk-fade-in': this.props.fadeIn === 'full' && !this.props.noFadeIn,
      'sk-fade-in-half-second': this.props.fadeIn === 'half' && !this.props.noFadeIn,
      'sk-fade-in-quarter-second': this.props.fadeIn === 'quarter' && !this.props.noFadeIn,
      'sk-spinner': !this.props.overrideSpinnerClassName,
      [spinnerInfo.className || this.props.name]: true,
    }); */

    var StyledSpinning = styledComponents[kind];
    return _react2.default.createElement(
      StyledSpinning,
      { color: color, fadeIn: fadeIn, theme: theme, size: size },
      Array.from(Array(spinnerInfo.divCount).keys()).map(function (_, idx) {
        return _react2.default.createElement('div', { key: idx });
      })
    );
  };

  return Spinner;
}(_react.Component);

Spinner.defaultProps = {
  kind: 'circle',
  fadeIn: 'full',
  color: 'dark-1',
  size: 'medium'
};
Spinner.propTypes = {
  fadeIn: _propTypes2.default.oneOf(['full', 'half', 'quarter', 'none', 'wordpress']),
  color: _propTypes2.default.string
};
exports.default = (0, _hocs.withTheme)(Spinner);