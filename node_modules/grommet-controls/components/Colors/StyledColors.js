'use strict';

exports.__esModule = true;
exports.StyledColor = exports.StyledColorContainer = exports.StyledRow = exports.StyledRows = undefined;

var _templateObject = _taggedTemplateLiteralLoose(['\n  ', '\n'], ['\n  ', '\n']);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _grommet = require('grommet');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

var sizeStyle = function sizeStyle(props) {
  var data = props.theme.calendar[props.size];
  return (0, _styledComponents.css)(['font-size:', ';line-height:', ';'], data.fontSize, data.lineHeight);
};

var StyledColors = _styledComponents2.default.div.withConfig({
  displayName: 'StyledColors'
})(['', ''], function (props) {
  return sizeStyle(props);
});

var StyledRows = exports.StyledRows = _styledComponents2.default.div.withConfig({
  displayName: 'StyledColors__StyledRows'
})(['position:relative;']);

var StyledRow = exports.StyledRow = _styledComponents2.default.div.withConfig({
  displayName: 'StyledColors__StyledRow'
})(['position:relative;display:flex;flex-direction:row;flex-justify:between;']);

var StyledColorContainer = exports.StyledColorContainer = _styledComponents2.default.div.withConfig({
  displayName: 'StyledColors__StyledColorContainer'
})(['flex:0 0;']);

var colorSizeStyle = function colorSizeStyle(props) {
  var data = props.theme.calendar[props.size];
  return (0, _styledComponents.css)(['width:', ';height:', ';'], data.daySize, data.daySize);
};

var StyledColor = exports.StyledColor = (0, _styledComponents2.default)(_grommet.Button).withConfig({
  displayName: 'StyledColors__StyledColor'
})(['top:0;position:absolute;display:flex;justify-content:center;align-items:center;', ' span{visibility:hidden;};transition:transform .2s;&:hover{z-index:10;width:auto;-webkit-transform:scale(2);-moz-transform:scale(2);transform:scale(2);span{visibility:visible;};);'], function (props) {
  return colorSizeStyle(props);
});

exports.default = StyledColors.extend(_templateObject, function (props) {
  return props.theme.calendar && props.theme.calendar.extend;
});