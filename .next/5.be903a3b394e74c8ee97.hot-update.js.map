{"version":3,"file":"5.be903a3b394e74c8ee97.hot-update.js","sources":["webpack:///./node_modules/grommet/es6/components/Anchor/doc.js","webpack:///./node_modules/grommet/es6/components/Box/doc.js","webpack:///./node_modules/grommet/es6/components/Button/StyledButton.js","webpack:///./node_modules/grommet/es6/components/Button/doc.js","webpack:///./node_modules/grommet/es6/components/Calendar/doc.js","webpack:///./node_modules/grommet/es6/components/Carousel/doc.js","webpack:///./node_modules/grommet/es6/components/Chart/doc.js","webpack:///./node_modules/grommet/es6/components/CheckBox/doc.js","webpack:///./node_modules/grommet/es6/components/Clock/doc.js","webpack:///./node_modules/grommet/es6/components/Diagram/doc.js","webpack:///./node_modules/grommet/es6/components/Distribution/doc.js","webpack:///./node_modules/grommet/es6/components/Drop/doc.js","webpack:///./node_modules/grommet/es6/components/DropButton/doc.js","webpack:///./node_modules/grommet/es6/components/FormField/doc.js","webpack:///./node_modules/grommet/es6/components/Grid/doc.js","webpack:///./node_modules/grommet/es6/components/Grommet/doc.js","webpack:///./node_modules/grommet/es6/components/Heading/doc.js","webpack:///./node_modules/grommet/es6/components/Image/doc.js","webpack:///./node_modules/grommet/es6/components/InfiniteScroll/doc.js","webpack:///./node_modules/grommet/es6/components/Keyboard/doc.js","webpack:///./node_modules/grommet/es6/components/Layer/doc.js","webpack:///./node_modules/grommet/es6/components/Markdown/doc.js","webpack:///./node_modules/grommet/es6/components/Menu/doc.js","webpack:///./node_modules/grommet/es6/components/Meter/doc.js","webpack:///./node_modules/grommet/es6/components/Paragraph/doc.js","webpack:///./node_modules/grommet/es6/components/RadioButton/doc.js","webpack:///./node_modules/grommet/es6/components/RangeInput/doc.js","webpack:///./node_modules/grommet/es6/components/RangeSelector/doc.js","webpack:///./node_modules/grommet/es6/components/Responsive/doc.js","webpack:///./node_modules/grommet/es6/components/Select/doc.js","webpack:///./node_modules/grommet/es6/components/SkipLinks/doc.js","webpack:///./node_modules/grommet/es6/components/Stack/doc.js","webpack:///./node_modules/grommet/es6/components/Table/doc.js","webpack:///./node_modules/grommet/es6/components/Tabs/doc.js","webpack:///./node_modules/grommet/es6/components/Text/doc.js","webpack:///./node_modules/grommet/es6/components/TextArea/doc.js","webpack:///./node_modules/grommet/es6/components/TextInput/doc.js","webpack:///./node_modules/grommet/es6/components/Video/doc.js","webpack:///./node_modules/grommet/es6/components/WorldMap/doc.js","webpack:///./node_modules/grommet/es6/themes/dark.js","webpack:///./node_modules/grommet/es6/themes/vanilla.js","webpack:///./node_modules/grommet/es6/utils/prop-types.js","webpack:///./node_modules/grommet/es6/utils/router.js","webpack:///./node_modules/polished/dist/polished.es.js","webpack:///./node_modules/react-desc/lib/index.js","webpack:///pages/index.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { describe, PropTypes } from 'react-desc';\n\nimport { ROUTER_PROPS, getAvailableAtBadge } from '../../utils';\n\nexport function routedAnchor(RoutedAnchor) {\n  var DocumentedRoutedAnchor = describe(RoutedAnchor).availableAt(getAvailableAtBadge('RoutedAnchor')).description('An Anchor with support for React Router.').usage(\"import { RoutedAnchor } from 'grommet';\\n<RoutedAnchor primary={true} path='/documentation' />\");\n  DocumentedRoutedAnchor.propTypes = _extends({}, ROUTER_PROPS);\n  return DocumentedRoutedAnchor;\n}\n\nexport default (function (Anchor) {\n  var DocumentedAnchor = describe(Anchor).availableAt(getAvailableAtBadge('Anchor')).description('A text link. We have a separate component from the browser\\nbase so we can style it. You can either set the icon and/or label properties\\nor just use children.').usage(\"import { Anchor } from 'grommet';\\n<Anchor href={location} label='Label' />\");\n\n  DocumentedAnchor.propTypes = {\n    a11yTitle: PropTypes.string.description('Custom title to be used by screen readers.'),\n    href: PropTypes.string.description('Hyperlink reference to place in the anchor.'),\n    icon: PropTypes.element.description('Icon element to place in the anchor.'),\n    label: PropTypes.node.description('Label text to place in the anchor.'),\n    onClick: PropTypes.func.description('Click handler. It can be used, for example, \\n    to add analytics and track who clicked in the anchor.'),\n    primary: PropTypes.bool.description('Whether this is a primary anchor.'),\n    reverse: PropTypes.bool.description('Whether an icon and label should be reversed so that the icon is at the end of the anchor.')\n  };\n\n  return DocumentedAnchor;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Anchor/doc.js\n// module id = ./node_modules/grommet/es6/components/Anchor/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { a11yTitlePropType, getAvailableAtBadge } from '../../utils';\n\nvar PAD_SIZES = ['xsmall', 'small', 'medium', 'large'];\n\nvar ANIMATION_TYPE = PropTypes.oneOf(['fadeIn', 'fadeOut', 'jiggle', 'pulse', 'slideUp', 'slideDown', 'slideLeft', 'slideRight', 'zoomIn', 'zoomOut']);\nvar ANIMATION_SHAPE = PropTypes.shape({\n  type: ANIMATION_TYPE,\n  delay: PropTypes.number,\n  duration: PropTypes.number,\n  size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge'])\n});\n\nexport default (function (Box) {\n  var DocumentedBox = describe(Box).availableAt(getAvailableAtBadge('Box')).description('A flexible box that lays out its contents along a single direction.').usage(\"import { Box } from 'grommet';\\n<Box />\");\n  DocumentedBox.propTypes = {\n    a11yTitle: a11yTitlePropType,\n    align: PropTypes.oneOf(['start', 'center', 'end', 'baseline', 'stretch']).description('How to align the contents along the cross axis.'),\n    alignContent: PropTypes.oneOf(['start', 'center', 'end', 'between', 'around', 'stretch']).description('How to align the contents when there is extra space in\\n        the cross axis.').defaultValue('stretch'),\n    alignSelf: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description('How to align along the cross axis when contained in\\n        a Box or along the column axis when contained in a Grid.'),\n    animation: PropTypes.oneOfType([ANIMATION_TYPE, ANIMATION_SHAPE, PropTypes.arrayOf(PropTypes.oneOfType([ANIMATION_TYPE, ANIMATION_SHAPE]))]).description('Animation effect(s) to use. \\'duration\\' and \\'delay\\' should\\n        be in milliseconds. \\'jiggle\\' and \\'pulse\\' types are intended for\\n        small elements, like icons.'),\n    background: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      color: PropTypes.string,\n      dark: PropTypes.bool,\n      image: PropTypes.string,\n      position: PropTypes.string,\n      opacity: PropTypes.oneOfType([PropTypes.oneOf(['weak', 'medium', 'strong']), PropTypes.bool])\n    })]).description('Either a color identifier to use for the background\\n        color. For example: \\'neutral-1\\'. Or, a \\'url()\\' for an image. Dark\\n        is not needed if color is provided.'),\n    basis: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'full', '1/2', '1/3', '2/3', '1/4', '3/4', 'auto']).description('A fixed or relative size along its container\\'s main axis.'),\n    border: PropTypes.oneOfType([PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'horizontal', 'vertical', 'all']), PropTypes.shape({\n      color: PropTypes.string,\n      side: PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'horizontal', 'vertical', 'all']),\n      size: PropTypes.oneOf(['small', 'medium', 'large'])\n    })]).description('Include a border.'),\n    direction: PropTypes.oneOf(['row', 'column', 'row-responsive']).description('The orientation to layout the child components in.').defaultValue('column'),\n    elevation: PropTypes.oneOf(['none', 'xsmall', 'small', 'medium', 'large', 'xlarge']).description('Elevated height above the underlying context, indicated\\n        via a drop shadow.').defaultValue('none'),\n    flex: PropTypes.oneOf(['grow', 'shrink', true, false]).description('Whether flex-grow and/or flex-shrink is true.'),\n    fill: PropTypes.oneOf(['horizontal', 'vertical', true, false]).description('Whether the width and/or height should fill the container.'),\n    gap: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']).description('The amount of spacing between child elements. This\\n        should not be used in conjunction with \\'wrap\\' as the gap elements\\n        will not wrap gracefully.'),\n    gridArea: PropTypes.string.description('The name of the area to place\\n      this Box in inside a parent Grid.'),\n    justify: PropTypes.oneOf(['start', 'center', 'between', 'end']).description('How to align the contents along the main axis.'),\n    justifySelf: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description('How to align along the row axis when contained in a Grid.'),\n    margin: PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(PAD_SIZES)), PropTypes.shape({\n      bottom: PropTypes.oneOf(PAD_SIZES),\n      horizontal: PropTypes.oneOf(PAD_SIZES),\n      left: PropTypes.oneOf(PAD_SIZES),\n      right: PropTypes.oneOf(PAD_SIZES),\n      top: PropTypes.oneOf(PAD_SIZES),\n      vertical: PropTypes.oneOf(PAD_SIZES)\n    })]).description('The amount of margin around the box. An object can\\n        be specified to distinguish horizontal margin, vertical margin, and\\n        margin on a particular side of the box'),\n    overflow: PropTypes.oneOf(['auto', 'hidden', 'scroll']).description('box overflow.'),\n    pad: PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(PAD_SIZES)), PropTypes.shape({\n      bottom: PropTypes.oneOf(PAD_SIZES),\n      horizontal: PropTypes.oneOf(PAD_SIZES),\n      left: PropTypes.oneOf(PAD_SIZES),\n      right: PropTypes.oneOf(PAD_SIZES),\n      top: PropTypes.oneOf(PAD_SIZES),\n      vertical: PropTypes.oneOf(PAD_SIZES)\n    })]).description('The amount of padding around the box contents. An\\n        object can be specified to distinguish horizontal padding, vertical\\n        padding, and padding on a particular side of the box'),\n    responsive: PropTypes.bool.description('Whether margin, pad, and border\\n      sizes should be scaled for mobile environments.').defaultValue(true),\n    round: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'full']).description('How much to round the corners.'),\n    tag: PropTypes.string.description('The DOM tag to use for the element.').defaultValue('div'),\n    wrap: PropTypes.bool.description('Whether children can wrap if they\\n      can\\'t all fit.')\n  };\n  return DocumentedBox;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Box/doc.js\n// module id = ./node_modules/grommet/es6/components/Box/doc.js\n// module chunks = 5","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _templateObject = _taggedTemplateLiteralLoose(['\\n  ', '\\n'], ['\\n  ', '\\n']);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\nimport styled, { css } from 'styled-components';\nimport { rgba } from 'polished';\n\nimport { activeStyle, backgroundStyle, colorForName, colorIsDark, focusStyle, fontSize, lapAndUp } from '../../utils';\n\nvar basicStyle = function basicStyle(props) {\n  return css(['border:', ' solid ', ';border-radius:', ';color:', ';'], props.theme.button.border.width, props.color ? colorForName(props.color, props.theme) : props.theme.button.border.color, props.theme.button.border.radius, props.grommet && props.grommet.dark ? props.theme.global.colors.darkBackground.text : props.theme.button.colors.text);\n};\n\nvar primaryStyle = function primaryStyle(props) {\n  return css(['', ' border:none;border-radius:', ';svg{fill:', ';stroke:', ';transition:none;}'], backgroundStyle(props.color || 'brand', props.theme), props.theme.button.border.radius, colorIsDark(colorForName('brand', props.theme)) ? props.theme.global.colors.darkBackground.text : props.theme.global.colors.lightBackground.text, colorIsDark(colorForName('brand', props.theme)) ? props.theme.global.colors.darkBackground.text : props.theme.global.colors.lightBackground.text);\n};\n\nvar disabledStyle = css(['opacity:', ';cursor:default;'], function (props) {\n  return props.theme.button.disabled.opacity;\n});\n\nfunction getHoverColor(props) {\n  if (props.color) {\n    return colorForName(props.color, props.theme);\n  }\n  return props.theme.button.border.color;\n}\n\nfunction getHoverIndicatorStyle(hoverIndicator, theme) {\n  var backgroundColor = theme.global.hover.backgroundColor;\n  if ((typeof hoverIndicator === 'undefined' ? 'undefined' : _typeof(hoverIndicator)) === 'object') {\n    if (typeof hoverIndicator.background === 'string') {\n      var colorGroup = hoverIndicator.background.split('-');\n      var colorType = colorGroup[0];\n      if (!theme.global.colors[colorType]) {\n        console.warn('Invalid color ' + hoverIndicator.background + ', using ' + backgroundColor + ' instead');\n      } else if (colorGroup.length > 1) {\n        // subtract one to use the array\n        var colorIndex = colorGroup[1] - 1;\n        if (theme.global.colors[colorType].length < colorGroup[1]) {\n          console.warn('Invalid color ' + hoverIndicator.background + ', using ' + backgroundColor + ' instead');\n        } else {\n          backgroundColor = rgba(theme.global.colors[colorType][colorIndex], 0.3) + ';';\n        }\n      } else if (typeof theme.global.colors[colorType] !== 'string') {\n        console.warn('Invalid color ' + hoverIndicator.background + ', using ' + backgroundColor + ' instead');\n      } else {\n        backgroundColor = rgba(theme.global.colors[colorType], 0.3) + ';';\n      }\n    }\n  }\n  return css(['background-color:', ';color:', ';'], backgroundColor, theme.global.hover.textColor);\n}\n\nvar hoverStyle = css(['&:hover{', ' ', ' ', '}'], function (props) {\n  return props.hoverIndicator && getHoverIndicatorStyle(props.hoverIndicator, props.theme);\n}, function (props) {\n  return !props.plain && css(['box-shadow:0px 0px 0px 2px ', ';'], getHoverColor(props));\n}, function (props) {\n  return !props.plain && !props.primary && css(['svg{fill:', ';stroke:', ';transition:none;}'], props.theme.global.hover.textColor, props.theme.global.hover.textColor);\n});\n\nvar fillStyle = '\\n  width: 100%;\\n  height: 100%;\\n  max-width: none;\\n  flex-grow: 1;\\n';\n\nvar plainFocusStyle = css(['box-shadow:0 0 ', ' ', ' ', ';'], function (props) {\n  return props.theme.global.focus.border.width;\n}, function (props) {\n  return props.theme.global.focus.border.width;\n}, function (props) {\n  return props.theme.global.focus.border.color;\n});\n\nvar plainStyle = css(['color:inherit;border:none;padding:0;text-align:inherit;', ''], function (props) {\n  return props.focus && props.focusIndicator && plainFocusStyle;\n});\n\nvar StyledButton = styled.button.withConfig({\n  displayName: 'StyledButton'\n})(['box-sizing:border-box;cursor:pointer;outline:none;font:inherit;text-decoration:none;font:inherit;margin:0;background-color:transparent;overflow:visible;text-transform:none;', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ''], function (props) {\n  return !props.plain && css(['text-align:center;display:inline-block;min-width:', ';max-width:', ';font-weight:', ';'], props.theme.button.minWidth, props.theme.button.maxWidth, props.theme.global.control.font.weight);\n}, function (props) {\n  return !props.plain && !props.primary && basicStyle(props);\n}, function (props) {\n  return !props.plain && props.primary && primaryStyle(props);\n}, function (props) {\n  return !props.disabled && !props.focus && hoverStyle;\n}, function (props) {\n  return !props.disabled && props.active && activeStyle;\n}, function (props) {\n  return props.disabled && disabledStyle;\n}, function (props) {\n  return !props.plain && fontSize(props.theme.global.control.font.size, props.theme.global.spacing);\n}, function (props) {\n  return !props.plain && 'padding: ' + props.theme.button.padding.vertical + ' ' + props.theme.button.padding.horizontal + ';';\n}, function (props) {\n  return props.focus && (!props.plain || props.focusIndicator) && focusStyle;\n}, lapAndUp('\\n    transition: 0.1s ease-in-out;\\n  '), function (props) {\n  return props.plain && plainStyle;\n}, function (props) {\n  return props.fillContainer && fillStyle;\n}, function (props) {\n  return props.icon && !props.label && '\\n    padding: ' + props.theme.global.edgeSize.small + ';\\n  ';\n});\n\nexport var StyledLabel = styled.span.withConfig({\n  displayName: 'StyledButton__StyledLabel'\n})(['&:first-child:not(:last-child){margin-right:', ';}'], function (props) {\n  return props.theme.global.edgeSize.small;\n});\n\nexport var StyledIcon = styled.span.withConfig({\n  displayName: 'StyledButton__StyledIcon'\n})(['display:inline-block;&:first-child:not(:last-child){margin-right:', ';}> *{vertical-align:bottom;}'], function (props) {\n  return props.theme.global.edgeSize.small;\n});\n\nexport default StyledButton.extend(_templateObject, function (props) {\n  return props.theme.button.extend;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Button/StyledButton.js\n// module id = ./node_modules/grommet/es6/components/Button/StyledButton.js\n// module chunks = 5","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { describe, PropTypes } from 'react-desc';\n\nimport { ROUTER_PROPS, getAvailableAtBadge } from '../../utils';\n\nexport function routedButton(RoutedButton) {\n  var DocumentedRoutedButton = describe(RoutedButton).availableAt(getAvailableAtBadge('RoutedButton')).description('A button with support for React Router.').usage('import { RoutedButton } from \\'grommet\\';\\n<RoutedButton primary={true} path=\\'/documentation\\' />');\n  DocumentedRoutedButton.propTypes = _extends({}, ROUTER_PROPS);\n  return DocumentedRoutedButton;\n}\n\nexport default (function (Button) {\n  var DocumentedButton = describe(Button).availableAt(getAvailableAtBadge('Button')).description('A button. We have a separate component from the browser base so we can style it.').usage('import { Button } from \\'grommet\\';\\n<Button primary={true} label=\\'Label\\' />');\n\n  DocumentedButton.propTypes = {\n    a11yTitle: PropTypes.string.description('Custom title to be used by screen readers.'),\n    active: PropTypes.bool.description('Whether the button is active.'),\n    color: PropTypes.string.description('Fill color for primary, border color otherwise.'),\n    fill: PropTypes.bool.description('Whether the button expands to fill all of the available width and height.'),\n    focusIndicator: PropTypes.bool.description('Whether when \\'plain\\' it should receive a focus outline.').defaultValue(true),\n    hoverIndicator: PropTypes.oneOfType([PropTypes.oneOf(['background']), PropTypes.shape({\n      background: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n    })]).description('The hover indicator to apply when the user is mousing over the\\nbutton. An object can be also be specified for color index support:\\n{background: \\'neutral-2\\'}. This prop is meant to be used only\\nwith plain Buttons.'),\n    href: PropTypes.string.description('If specified, the button will behave like an anchor tag.'),\n    icon: PropTypes.element.description('Icon element to place in the button.'),\n    label: PropTypes.node.description('Label text to place in the button.'),\n    onClick: PropTypes.func.description('Click handler. Not setting this property and not specifying a href\\ncauses the Button to be disabled.'),\n    primary: PropTypes.bool.description('Whether this is a primary button. There should be at most one per page or screen.'),\n    reverse: PropTypes.bool.description('Whether an icon and label should be reversed so that the icon is at the\\nend of the anchor.'),\n    type: PropTypes.oneOf(['button', 'reset', 'submit']).description('The type of button. Set the type to submit for the default button on forms.').defaultValue('button')\n  };\n\n  return DocumentedButton;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Button/doc.js\n// module id = ./node_modules/grommet/es6/components/Button/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Calendar) {\n  var DocumentedCalendar = describe(Calendar).availableAt(getAvailableAtBadge('Calendar')).description('Calendar of days in months.\\n      It can be used to select a single date, a range of dates, or multiple\\n      individual dates.').usage('import { Calendar } from \\'grommet\\';\\n<Calendar />');\n\n  DocumentedCalendar.propTypes = {\n    bounds: PropTypes.arrayOf(PropTypes.string).description('An array of two numbers indicating the limits on\\n        navigation in ISO8601 format'),\n    date: PropTypes.string.description('The selected date in ISO8601 format'),\n    dates: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])).description('Multiple selected dates in ISO8601 format.\\n      Items that are an array indicate a range of dates.'),\n    disabled: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])).description('Multiple dates in ISO8601 format that should not be\\n        selectable. Items that are an array indicate a range of dates.'),\n    firstDayOfWeek: PropTypes.oneOf([0, 1]).description('The first day of the week. 0 for Sunday. 1 for Monday.'),\n    locale: PropTypes.string.description('The locale to use.'),\n    onSelect: PropTypes.func.description('Called with an ISO8601 date when\\n      the user selects a day.\\n      For single select, make this the subsequent `date` property value.\\n      For multiple select or ranges, toggle values in `dates`.\\n      Not specifying this property makes the component read only.'),\n    size: PropTypes.oneOf(['small', 'medium', 'large']).description('What size to make it.')\n  };\n\n  return DocumentedCalendar;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Calendar/doc.js\n// module id = ./node_modules/grommet/es6/components/Calendar/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Carousel) {\n  var DocumentedCarousel = describe(Carousel).availableAt(getAvailableAtBadge('Carousel')).description('A carousel that cycles through children. Child components\\n      would typically be Images. It is the caller\\'s responsibility to ensure\\n      that all children are the same size.').usage('import { Carousel } from \\'grommet\\';\\n<Carousel />');\n\n  DocumentedCarousel.propTypes = {\n    fill: PropTypes.bool.description('Whether to expand to fill\\n      all of the available width and height in the parent container.'),\n    play: PropTypes.number.description('If specified, the number of\\n      milliseconds between automatically transitioning to the next child. It\\n      will loop through all children indefinitely.')\n  };\n\n  return DocumentedCarousel;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Carousel/doc.js\n// module id = ./node_modules/grommet/es6/components/Carousel/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Chart) {\n  var DocumentedChart = describe(Chart).availableAt(getAvailableAtBadge('Chart')).description('A graphical chart.').usage(\"import { Chart } from 'grommet';\\n<Chart />\");\n\n  DocumentedChart.propTypes = {\n    bounds: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).description('The limits for the values, specified as a two dimensional array.\\n      If not specified, the bounds will automatically be set to fit\\n      the provided values.'),\n    color: PropTypes.string.description('A color identifier to use for the graphic color.').defaultValue('accent-1'),\n    onClick: PropTypes.func.description('Called when the user clicks on it.\\n      This is only available when the type is line or area.'),\n    onHover: PropTypes.func.description('Called with a boolean argument\\n      indicating when the user hovers onto or away from it.\\n      This is only available when the type is line or area.'),\n    round: PropTypes.bool.description('Whether to round the line ends.'),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'full']), PropTypes.shape({\n      height: PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'full']),\n      width: PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'full'])\n    })]).description('The size of the Chart.').defaultValue({ width: 'medium', height: 'small' }),\n    thickness: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'none']).description('The width of the stroke.').defaultValue('medium'),\n    type: PropTypes.oneOf(['bar', 'line', 'area']).description('The visual type of meter.').defaultValue('bar'),\n    values: PropTypes.arrayOf(PropTypes.shape({\n      label: PropTypes.string, // for accessibility of bars\n      onClick: PropTypes.func,\n      onHover: PropTypes.func,\n      value: PropTypes.arrayOf(PropTypes.number).isRequired\n    })).description('Array of value objects describing the data.\\n      \\'value\\' is a tuple indicating the coordinate of the value or a triple\\n      indicating the x coordinate and a range of two y coordinates.\\n      \\'label\\' is a text string describing it.\\n      \\'onHover\\' and \\'onClick\\' only work when type=\\'bar\\'.').isRequired\n  };\n\n  return DocumentedChart;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Chart/doc.js\n// module id = ./node_modules/grommet/es6/components/Chart/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (CheckBox) {\n  var DocumentedCheckBox = describe(CheckBox).availableAt(getAvailableAtBadge('CheckBox')).description('A checkbox toggle control.').usage('import { CheckBox } from \\'grommet\\';\\n<CheckBox />');\n\n  DocumentedCheckBox.propTypes = {\n    checked: PropTypes.bool.description('Same as React <input checked={} />'),\n    disabled: PropTypes.bool.description('Same as React <input disabled={} />. Also adds a hidden input element\\n      with the same name so form submissions work.'),\n    id: PropTypes.string.description('The DOM id attribute value to use for the underlying <input/> element.'),\n    label: PropTypes.node.description('Label text to place next to the control.'),\n    name: PropTypes.string.description('The DOM name attribute value to use for the underlying <input/> element.'),\n    onChange: PropTypes.func.description('Function that will be called when the user clicks the check box. It\\n      will be passed a React event object. The current state can be accessed\\n      via event.target.checked. Same as React <input onChange={} />.'),\n    reverse: PropTypes.bool.description('Whether to show the label in front of the checkbox.'),\n    toggle: PropTypes.bool.description('Whether to visualize it as a toggle switch.')\n  };\n\n  return DocumentedCheckBox;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/CheckBox/doc.js\n// module id = ./node_modules/grommet/es6/components/CheckBox/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Clock) {\n  var DocumentedClock = describe(Clock).availableAt(getAvailableAtBadge('Clock')).description('A clock with timezone awareness.').usage('import { Clock } from \\'grommet\\';\\n<Clock />');\n\n  DocumentedClock.propTypes = {\n    hourLimit: PropTypes.oneOf([12, 24, '12', '24']).description('Whether to roll over the hours after 12 or after 24.').defaultValue(24),\n    onChange: PropTypes.func.description('If the clock is running, this function will be called with the\\n      current time value each time it changes.'),\n    precision: PropTypes.oneOf(['hours', 'minutes', 'seconds']).description('How precise a time to represent.').defaultValue('seconds'),\n    run: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['backward', 'forward'])]).description('Whether the clock should actively adjust time or be fixed to the\\n      time specified. \\'backward\\' could be used as a countdown timer.').defaultValue('forward'),\n    size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']).description('Clock size').defaultValue('medium'),\n    time: PropTypes.string.description('ISO8601 time or duration. For example: \\'PT8H12M23S\\',\\n      \\'T08:12:23\\', or \\'2015-02-22T08:12:23\\'. Any included date\\n      portion will be ignored for an analog clock. If not provided, the\\n      current browser time will be used.'),\n    type: PropTypes.oneOf(['analog', 'digital']).description('What type of visualization to show.').defaultValue('analog')\n  };\n\n  return DocumentedClock;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Clock/doc.js\n// module id = ./node_modules/grommet/es6/components/Clock/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Diagram) {\n  var DocumentedDiagram = describe(Diagram).availableAt(getAvailableAtBadge('Diagram')).description('Graphical lines between DOM elements.\\n      Diagram is meant to be used with Stack.').usage(\"import { Diagram } from 'grommet';\\n<Diagram />\");\n\n  DocumentedDiagram.propTypes = {\n    connections: PropTypes.arrayOf(PropTypes.shape({\n      color: PropTypes.string,\n      fromTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      label: PropTypes.string, // for accessibility\n      offset: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']),\n      thickness: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']),\n      toTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      type: PropTypes.oneOf(['direct', 'curved', 'rectilinear'])\n    })).description('Array of objects describing the connections.\\n      The \\'fromTarget\\' and \\'toTarget\\' may be either DOM element ids or\\n      React references.\\n      \\'offset\\' can be used to shift a bit to reduce the amount of overlap\\n      with other connection lines to make the lines easier to distinguish.').isRequired\n  };\n\n  return DocumentedDiagram;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Diagram/doc.js\n// module id = ./node_modules/grommet/es6/components/Diagram/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Distribution) {\n  var DocumentedDistribution = describe(Distribution).availableAt(getAvailableAtBadge('Distribution')).description('Approximately proportionally sized grid of boxes. The\\n      area given to each box isn\\'t mathematically precise according to the\\n      ratio to the total values. Instead, the boxes are laid out in a\\n      manner that makes them more visually easy to scan. For example,\\n      two values of 48 and 52 will actually each get 50% of the area.').usage(\"import { Distribution } from 'grommet';\\n<Distribution />\");\n\n  DocumentedDistribution.propTypes = {\n    children: PropTypes.func.description('Function that will be called when each value is rendered.'),\n    gap: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']).description('The amount of spacing between child elements.'),\n    values: PropTypes.arrayOf(PropTypes.shape({\n      value: PropTypes.number.isRequired\n    })).description('Array of objects containing a value. The caller can put other\\n      properties in the object. The children function will be called to\\n      render the contents of each value.').isRequired\n  };\n\n  return DocumentedDistribution;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Distribution/doc.js\n// module id = ./node_modules/grommet/es6/components/Distribution/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Drop) {\n  var DocumentedDrop = describe(Drop).availableAt(getAvailableAtBadge('Drop')).description('A drop container that opens next to a target.').usage('import { Drop } from \\'grommet\\';\\n<Drop target={reference}>...</Drop>');\n\n  DocumentedDrop.propTypes = {\n    align: PropTypes.shape({\n      top: PropTypes.oneOf(['top', 'bottom']),\n      bottom: PropTypes.oneOf(['top', 'bottom']),\n      right: PropTypes.oneOf(['left', 'right']),\n      left: PropTypes.oneOf(['left', 'right'])\n    }).description('How to align the drop with respect to the target element.').defaultValue({\n      top: 'top',\n      left: 'left'\n    }),\n    onClickOutside: PropTypes.func.description('Function that will be invoked when the user clicks outside the drop.'),\n    onEsc: PropTypes.func.description('Function that will be called when the user presses the escape key inside the drop.'),\n    responsive: PropTypes.bool.description('Whether to dynamically re-place when resized.').defaultValue(true),\n    restrictFocus: PropTypes.bool.description('Whether the drop should control focus.'),\n    target: PropTypes.object.description('Target where the drop will be aligned to. This should be a React reference.').isRequired,\n    theme: PropTypes.object.description('Custom styles for Drop component.')\n  };\n\n  return DocumentedDrop;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Drop/doc.js\n// module id = ./node_modules/grommet/es6/components/Drop/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (DropButton) {\n  var DocumentedDropButton = describe(DropButton).availableAt(getAvailableAtBadge('DropButton')).description('A Button that when clicked will a Drop with the specified \\'dropContent\\'.\\n      When opened, the drop will control the focus so that the contents behind\\n      it are not focusable. All properties of Button can be passed through.\\n      ').usage('import { DropButton } from \\'grommet\\';\\n<DropButton dropContent={...} />');\n\n  DocumentedDropButton.propTypes = {\n    a11yTitle: PropTypes.string.description('Custom title to be used by screen readers.'),\n    disabled: PropTypes.bool.description('Whether the button should be disabled.'),\n    dropAlign: PropTypes.shape({\n      top: PropTypes.oneOf(['top', 'bottom']),\n      bottom: PropTypes.oneOf(['top', 'bottom']),\n      right: PropTypes.oneOf(['left', 'right']),\n      left: PropTypes.oneOf(['left', 'right'])\n    }).description('How to align the drop with respect to the button.').defaultValue({\n      top: 'top',\n      left: 'left'\n    }),\n    dropContent: PropTypes.element.description('Content to put inside the Drop.').isRequired,\n    dropTarget: PropTypes.object.description('Target where the drop will be aligned to. This should be\\n      a React reference. Typically, this is not required as the drop will be\\n      aligned to the DropButton itself by default.'),\n    onClose: PropTypes.func.description('Callback for when the drop is closed'),\n    onOpen: PropTypes.func.description('Callback for when the drop is opened'),\n    open: PropTypes.bool.description('Whether the drop should be open or not. Setting this property does not\\n      influence user interaction after it has been rendered.')\n  };\n\n  return DocumentedDropButton;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/DropButton/doc.js\n// module id = ./node_modules/grommet/es6/components/DropButton/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (FormField) {\n  var DocumentedFormField = describe(FormField).availableAt(getAvailableAtBadge('FormField')).description('A field in a form.').usage('import { FormField } from \\'grommet\\';\\n<FormField />');\n\n  DocumentedFormField.propTypes = {\n    error: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).description('Any error text describing issues with the field'),\n    help: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).description('Any help text describing how the field works'),\n    htmlFor: PropTypes.string.description('The id of the input element contained in this field'),\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).description('A short label describing the field')\n  };\n\n  return DocumentedFormField;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/FormField/doc.js\n// module id = ./node_modules/grommet/es6/components/FormField/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nvar sizes = ['xsmall', 'small', 'medium', 'large', 'xlarge', 'full', '1/2', '1/3', '2/3', '1/4', '3/4', 'flex'];\nvar edgeSizes = ['small', 'medium', 'large', 'none'];\n\nexport default (function (Grid) {\n  var DocumentedGrid = describe(Grid).availableAt(getAvailableAtBadge('Grid')).description('A grid system for laying out content. To use, define the\\nrows and columns, create area names for adjacent cells, and then\\nplace Box components inside those areas using the Box.gridArea property.\\nSee https://css-tricks.com/snippets/css/complete-guide-grid/.').usage('import { Grid } from \\'grommet\\';\\n<Grid />');\n\n  DocumentedGrid.propTypes = {\n    align: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description('How to align the individual items inside the grid when there is extra\\nspace in the column axis.').defaultValue('stretch'),\n    alignContent: PropTypes.oneOf(['start', 'center', 'end', 'between', 'around', 'stretch']).description('How to align the contents along the column axis.'),\n    areas: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      start: PropTypes.arrayOf(PropTypes.number),\n      end: PropTypes.arrayOf(PropTypes.number)\n    })).description('Area names and column,row coordinates.'),\n    columns: PropTypes.arrayOf(PropTypes.oneOf(sizes)).description('Column sizes.'),\n    gap: PropTypes.oneOfType([PropTypes.oneOf(edgeSizes), PropTypes.shape({\n      horizontal: PropTypes.oneOf(edgeSizes),\n      vertical: PropTypes.oneOf(edgeSizes)\n    })]).description('Gap sizes between rows and/or columns.'),\n    justify: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description('How to align the individual items inside the grid when there is extra\\nspace in the row axis.').defaultValue('stretch'),\n    justifyContent: PropTypes.oneOf(['start', 'center', 'end', 'between', 'around', 'stretch']).description('How to align the contents along the row axis.'),\n    rows: PropTypes.arrayOf(PropTypes.oneOf(sizes)).description('Row sizes.'),\n    tag: PropTypes.string.description('The DOM tag to use for the element.').defaultValue('div')\n  };\n\n  return DocumentedGrid;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Grid/doc.js\n// module id = ./node_modules/grommet/es6/components/Grid/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Grommet) {\n  var DocumentedGrommet = describe(Grommet).availableAt(getAvailableAtBadge('Grommet')).description('This is the top level Grommet container.').usage('import { Grommet } from \\'grommet\\';\\n<Grommet>...</Grommet>');\n\n  DocumentedGrommet.propTypes = {\n    full: PropTypes.bool.description('Whether to take the whole viewport.'),\n    theme: PropTypes.object.description('Custom styles for Grommet app component.')\n  };\n\n  return DocumentedGrommet;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Grommet/doc.js\n// module id = ./node_modules/grommet/es6/components/Grommet/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Heading) {\n  var DocumentedHeading = describe(Heading).availableAt(getAvailableAtBadge('Heading')).description('Heading text structed in levels.').usage('import { Heading } from \\'grommet\\';\\n<Heading />');\n\n  DocumentedHeading.propTypes = {\n    color: PropTypes.string.description('A color identifier to use for the text color. For example:\\n      \\'brand\\'.'),\n    level: PropTypes.oneOf([1, 2, 3, 4, '1', '2', '3', '4']).description('The heading level. It corresponds to the number after the \\'H\\' for\\nthe DOM tag. Set the level for semantic accuracy and accessibility.\\nThe sizing can be further adjusted using the size property.'),\n    margin: PropTypes.oneOfType([PropTypes.oneOf(['none', 'small', 'medium', 'large']), PropTypes.shape({\n      bottom: PropTypes.oneOf(['none', 'small', 'medium', 'large']),\n      top: PropTypes.oneOf(['none', 'small', 'medium', 'large'])\n    })]).description('The amount of margin above and/or below the heading. An object can be\\nspecified to distinguish top margin and bottom margin.'),\n    responsive: PropTypes.bool.description('Whether the font size should be scaled for\\n      mobile environments.').defaultValue(true),\n    size: PropTypes.oneOf(['small', 'medium', 'large']).description('The font size is primarily driven by the chosen tag. But, it can\\nbe adjusted via this size property. The tag should be set for semantic\\ncorrectness and accessibility. This size property allows for stylistic\\nadjustments.'),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the text inside the heading.'),\n    truncate: PropTypes.bool.description('Restrict the text to a single line and truncate with ellipsis if it\\nis too long to all fit.')\n  };\n\n  return DocumentedHeading;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Heading/doc.js\n// module id = ./node_modules/grommet/es6/components/Heading/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Image) {\n  var DocumentedImage = describe(Image).availableAt(getAvailableAtBadge('Image')).description('An image.').usage('import { Image } from \\'grommet\\';\\n<Image/>');\n\n  DocumentedImage.propTypes = {\n    fit: PropTypes.oneOf(['cover', 'contain']).description('How the image fills its container.')\n  };\n\n  return DocumentedImage;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Image/doc.js\n// module id = ./node_modules/grommet/es6/components/Image/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (InfiniteScroll) {\n  var DocumentedInfiniteScroll = describe(InfiniteScroll).availableAt(getAvailableAtBadge('InfiniteScroll')).description('A container that lazily renders items.').usage('import { InfiniteScroll } from \\'grommet\\';\\n<InfiniteScroll />');\n\n  DocumentedInfiniteScroll.propTypes = {\n    children: PropTypes.func.description('Function that will be called when each item is rendered.'),\n    items: PropTypes.arrayOf(PropTypes.any).description('The children callback will be called to render each item.'),\n    onMore: PropTypes.func.description('Use this to indicate that \\'items\\' doesn\\'t contain all that it could.\\n      It will be called when the entire list of items has been rendered.\\n      This might be used when the total number of items that could be retrieved\\n      is more than you\\'d want to load into the browser. \\'onMore\\' allows you\\n      to lazily fetch more from the server only when needed.'),\n    step: PropTypes.number.description('How many items to render at a time.').defaultValue(50)\n  };\n\n  return DocumentedInfiniteScroll;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/InfiniteScroll/doc.js\n// module id = ./node_modules/grommet/es6/components/InfiniteScroll/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nexport default (function (Keyboard) {\n  var DocumentedKeyboard = describe(Keyboard).description('A react component that handles keyboard key presses.').usage('import { Keyboard } from \\'grommet\\';\\n<Keyboard onUp={() => {}} />');\n\n  DocumentedKeyboard.propTypes = {\n    target: PropTypes.oneOf(['component', 'document']).description('Where to listen for the keyboard presses.').defaultValue('component'),\n    onBackspace: PropTypes.func.description('Function that will be called when the user presses the backspace key.'),\n    onComma: PropTypes.func.description('Function that will be called when the user presses the comma key.'),\n    onDown: PropTypes.func.description('Function that will be called when the user presses the down key.'),\n    onEnter: PropTypes.func.description('Function that will be called when the user presses the enter key.'),\n    onEsc: PropTypes.func.description('Function that will be called when the user presses the esc key.'),\n    onLeft: PropTypes.func.description('Function that will be called when the user presses the left key.'),\n    onRight: PropTypes.func.description('Function that will be called when the user presses the right key.'),\n    onShift: PropTypes.func.description('Function that will be called when the user presses the shift key.'),\n    onSpace: PropTypes.func.description('Function that will be called when the user presses the space key.'),\n    onTab: PropTypes.func.description('Function that will be called when the user presses the tab key.'),\n    onUp: PropTypes.func.description('Function that will be called when the user presses the up key.')\n  };\n\n  return DocumentedKeyboard;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Keyboard/doc.js\n// module id = ./node_modules/grommet/es6/components/Keyboard/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nvar PAD_SIZES = ['xsmall', 'small', 'medium', 'large'];\n\nexport default (function (Layer) {\n  var DocumentedLayer = describe(Layer).availableAt(getAvailableAtBadge('Layer')).description('A modal overlay. It is the caller\\'s responsibility to provide a control for\\n      the user to close the layer.').usage('import { Layer } from \\'grommet\\';\\n<Layer />');\n\n  DocumentedLayer.propTypes = {\n    full: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertical', 'horizontal'])]).description('Whether the width and/or height should fill the current viewport size.'),\n    margin: PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(PAD_SIZES)), PropTypes.shape({\n      bottom: PropTypes.oneOf(PAD_SIZES),\n      horizontal: PropTypes.oneOf(PAD_SIZES),\n      left: PropTypes.oneOf(PAD_SIZES),\n      right: PropTypes.oneOf(PAD_SIZES),\n      top: PropTypes.oneOf(PAD_SIZES),\n      vertical: PropTypes.oneOf(PAD_SIZES)\n    })]).description('The amount of margin around the Layer. An object can be specified to\\ndistinguish horizontal margin, vertical margin, and margin on a\\nparticular side of the layer'),\n    modal: PropTypes.bool.description('Whether there should be an overlay preventing interaction underneath the layer.').defaultValue(true),\n    onClickOutside: PropTypes.bool.description('Function that will be invoked when the user clicks outside the layer.'),\n    onEsc: PropTypes.func.description('Function that will be called when the user presses the escape key inside the layer.'),\n    plain: PropTypes.bool.description('Whether this is a plain Layer with no background color or border.'),\n    position: PropTypes.oneOf(['bottom', 'center', 'hidden', 'left', 'right', 'top']).description('Position of the layer content.').defaultValue('center')\n  };\n\n  return DocumentedLayer;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Layer/doc.js\n// module id = ./node_modules/grommet/es6/components/Layer/doc.js\n// module chunks = 5","import { describe } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Markdown) {\n  var DocumentedMarkdown = describe(Markdown).availableAt(getAvailableAtBadge('Markdown')).description('Markdown formatting using Grommet components.').usage('import { Markdown } from \\'grommet\\';\\n      <Markdown>{content}</Markdown>');\n\n  // DocumentedMarkdown.propTypes = {\n  //   content: PropTypes.string.description('The markdown text to render.'),\n  // };\n\n  return DocumentedMarkdown;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Markdown/doc.js\n// module id = ./node_modules/grommet/es6/components/Markdown/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nvar VERTICAL_ALIGN_OPTIONS = ['top', 'bottom'];\nvar HORIZONTAL_ALIGN_OPTIONS = ['right', 'left'];\n\nexport default (function (Menu) {\n  var DocumentedMenu = describe(Menu).availableAt(getAvailableAtBadge('Menu')).description('Presents a list of choices within a drop down via a control that\\n      opens it.').usage('import { Menu } from \\'grommet\\';\\n<Menu />');\n\n  DocumentedMenu.propTypes = {\n    disabled: PropTypes.bool.description('Whether the menu should be disabled.'),\n    dropAlign: PropTypes.shape({\n      top: PropTypes.oneOf(VERTICAL_ALIGN_OPTIONS),\n      bottom: PropTypes.oneOf(VERTICAL_ALIGN_OPTIONS),\n      left: PropTypes.oneOf(HORIZONTAL_ALIGN_OPTIONS),\n      right: PropTypes.oneOf(HORIZONTAL_ALIGN_OPTIONS)\n    }).description('Where to place the drop down. The keys correspond to a side of the drop down.\\nThe values correspond to a side of the control. For instance,\\n{left: \\'left\\', top: \\'bottom\\'} would align the left edges and the top of\\nthe drop down to the bottom of the control. At most one of left or right and\\none of top or bottom should be specified.'),\n    dropBackground: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      color: PropTypes.string,\n      opacity: PropTypes.oneOfType([PropTypes.oneOf(['weak', 'medium', 'strong']), PropTypes.bool])\n    })]).description('Background color when drop is active'),\n    dropTarget: PropTypes.object.description('Target where the drop will be aligned to. This should be\\n      a React reference. Typically, this is not required as the drop will be\\n      aligned to the Menu itself by default.'),\n    icon: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]).description('Indicates the icon shown as a control to open it.'),\n    items: PropTypes.arrayOf(PropTypes.object).description('Menu items to be placed inside the drop down.\\nThe object values can be any Button prop, for example: label and onClick.').isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).description('Indicates the label shown as a control to open it.'),\n    messages: PropTypes.shape({\n      closeMenu: PropTypes.string,\n      openMenu: PropTypes.string\n    }).description('Custom messages. Used for accessibility by screen readers.'),\n    size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']).description('The size of the menu.')\n  };\n\n  return DocumentedMenu;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Menu/doc.js\n// module id = ./node_modules/grommet/es6/components/Menu/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { backgroundPropType, getAvailableAtBadge } from '../../utils';\n\nexport default (function (Meter) {\n  var DocumentedMeter = describe(Meter).availableAt(getAvailableAtBadge('Meter')).description('A graphical meter.').usage('import { Meter } from \\'grommet\\';\\n<Meter />');\n\n  DocumentedMeter.propTypes = {\n    background: backgroundPropType,\n    round: PropTypes.bool.description('Whether to round the line ends'),\n    size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'full']).description('The size of the Meter.').defaultValue('medium'),\n    thickness: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']).description('The size of the Meter.').defaultValue('medium'),\n    type: PropTypes.oneOf(['bar', 'circle']).description('The visual type of meter.'),\n    values: PropTypes.arrayOf(PropTypes.shape({\n      color: PropTypes.string,\n      highlight: PropTypes.bool,\n      label: PropTypes.string.isRequired, // for accessibility\n      onClick: PropTypes.func,\n      onHover: PropTypes.func,\n      value: PropTypes.number.isRequired\n    })).description('Array of value objects describing the data.\\n      \\'value\\' is the actual numeric value.\\n      \\'label\\' is a text string describing it.\\n      \\'color\\' indicates the color name to use. If not specified a default one\\n      will be chosen.\\n      \\'onClick\\' will be called when the user clicks on it.\\n      Set \\'highlight\\' to call attention to it.\\n      \\'onHover\\' will be called with a boolean argument indicating when the\\n      user hovers onto or away from it.')\n  };\n\n  return DocumentedMeter;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Meter/doc.js\n// module id = ./node_modules/grommet/es6/components/Meter/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Paragraph) {\n  var DocumentedParagraph = describe(Paragraph).availableAt(getAvailableAtBadge('Paragraph')).description('A paragraph of text.').usage('import { Paragraph } from \\'grommet\\';\\n<Paragraph />');\n\n  DocumentedParagraph.propTypes = {\n    margin: PropTypes.oneOfType([PropTypes.oneOf(['none', 'small', 'medium', 'large']), PropTypes.shape({\n      bottom: PropTypes.oneOf(['small', 'medium', 'large']),\n      top: PropTypes.oneOf(['small', 'medium', 'large'])\n    })]).description('The amount of margin above and/or below the paragraph. An object can be\\nspecified to distinguish top margin and bottom margin.'),\n    size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']).description('The size of the Paragraph text.').defaultValue('medium'),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the text inside the paragraph.')\n  };\n\n  return DocumentedParagraph;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Paragraph/doc.js\n// module id = ./node_modules/grommet/es6/components/Paragraph/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (RadioButton) {\n  var DocumentedRadioButton = describe(RadioButton).availableAt(getAvailableAtBadge('RadioButton')).description('A radio button control.').usage('import { RadioButton } from \\'grommet\\';\\n<RadioButton />');\n\n  DocumentedRadioButton.propTypes = {\n    checked: PropTypes.bool.description('Same as React <input checked={} />'),\n    disabled: PropTypes.bool.description('Same as React <input disabled={} />. Also adds a hidden input element\\nwith the same name so form submissions work.'),\n    id: PropTypes.string.description('The DOM id attribute value to use for the underlying <input/> element.'),\n    label: PropTypes.node.description('Label text to place next to the control.'),\n    name: PropTypes.string.description('The DOM name attribute value to use for the underlying <input/> element.').isRequired,\n    onChange: PropTypes.func.description('Function that will be called when the user clicks the radio button. It\\n      will be passed a React event object. The current state can be accessed\\n      via event.target.checked. Same as React <input onChange={} />.')\n  };\n\n  return DocumentedRadioButton;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/RadioButton/doc.js\n// module id = ./node_modules/grommet/es6/components/RadioButton/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (RangeInput) {\n  var DocumentedRangeInput = describe(RangeInput).availableAt(getAvailableAtBadge('RangeInput')).description('A range input with custom styles.').usage('import { RangeInput } from \\'grommet\\';\\n<RangeInput />');\n\n  DocumentedRangeInput.propTypes = {\n    id: PropTypes.string.description('The id attribute of the range input.'),\n    min: PropTypes.number.description('The minimum value permitted.'),\n    max: PropTypes.number.description('The maximum value permitted.'),\n    name: PropTypes.string.description('The name attribute of the range input.'),\n    onChange: PropTypes.func.description('Function that will be called when the user changes the value. It will\\n      be passed an event object. The new input value will be available\\n      via \\'event.target.value\\'.'),\n    step: PropTypes.number.description('The step interval between values.'),\n    value: PropTypes.number.description('The current value.')\n  };\n\n  return DocumentedRangeInput;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/RangeInput/doc.js\n// module id = ./node_modules/grommet/es6/components/RangeInput/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (RangeSelector) {\n  var DocumentedRangeSelector = describe(RangeSelector).availableAt(getAvailableAtBadge('RangeSelector')).description('A control to allow selecting a range of values.').usage('import { RangeSelector } from \\'grommet\\';\\n<RangeSelector />');\n\n  DocumentedRangeSelector.propTypes = {\n    color: PropTypes.string.description('What color to use to indicate the selection.'),\n    direction: PropTypes.oneOf(['horizontal', 'vertical']).description('').defaultValue('horizontal'),\n    invert: PropTypes.bool.description('Whether to indicate what has not been selected.'),\n    max: PropTypes.number.description('The maximum value permitted.').defaultValue(100),\n    messages: PropTypes.shape({\n      lower: PropTypes.string,\n      upper: PropTypes.string\n    }).description('Custom messages. Used for accessibility by screen readers.'),\n    min: PropTypes.number.description('The minimum value permitted.').defaultValue(0),\n    onChange: PropTypes.func.description('Function that will be called when the user changes one of the\\n      values. It will be passed an array of two numbers indicating\\n      the new values selected.'),\n    opacity: PropTypes.oneOf(['weak', 'medium', 'strong']).description('').defaultValue('medium'),\n    round: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'full']).description('How much to round the corners.'),\n    size: PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'full']).description('How thick to make the selection indicator.').defaultValue('medium'),\n    step: PropTypes.number.description('The step interval between values.').defaultValue(1),\n    values: PropTypes.arrayOf(PropTypes.number).description('The current values.').isRequired\n  };\n\n  return DocumentedRangeSelector;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/RangeSelector/doc.js\n// module id = ./node_modules/grommet/es6/components/RangeSelector/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nexport default (function (Responsive) {\n  var DocumentedResponsive = describe(Responsive).description('A react component that handles responsive breakpoints.').usage('import { Responsive } from \\'grommet\\';\\n<Responsive onChange={() => {}} />');\n\n  DocumentedResponsive.propTypes = {\n    onChange: PropTypes.func.description('Function that will be called when the browser window crosses a responsive\\nbreakpoint. It will be passed the current media size name, either\\n\\'narrow\\' or \\'wide\\'')\n  };\n\n  return DocumentedResponsive;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Responsive/doc.js\n// module id = ./node_modules/grommet/es6/components/Responsive/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { a11yTitlePropType, backgroundPropType, getAvailableAtBadge } from '../../utils';\n\nexport default (function (Select) {\n  var DocumentedSelect = describe(Select).availableAt(getAvailableAtBadge('Select')).description('An select-like field with optional search capability.').usage('import { Select } from \\'grommet\\';\\n<Select />');\n\n  DocumentedSelect.propTypes = {\n    a11yTitle: a11yTitlePropType,\n    children: PropTypes.func.description('Function that will be called when each option is rendered.'),\n    disabled: PropTypes.bool.description('Whether the select should be disabled.'),\n    dropAlign: PropTypes.shape({\n      top: PropTypes.oneOf(['top', 'bottom']),\n      bottom: PropTypes.oneOf(['top', 'bottom']),\n      right: PropTypes.oneOf(['left', 'right']),\n      left: PropTypes.oneOf(['left', 'right'])\n    }).description('How to align the drop.').defaultValue({\n      top: 'top',\n      left: 'left'\n    }),\n    dropBackground: backgroundPropType,\n    dropTarget: PropTypes.object.description('Target where the options drop will be aligned to. This should be\\n      a React reference. Typically, this is not required as the drop will be\\n      aligned to the Select itself by default.'),\n    focusIndicator: PropTypes.bool.description('Whether when \\'plain\\' it should receive a focus outline.'),\n    messages: PropTypes.shape({\n      multiple: PropTypes.string\n    }).description('Custom messages.'),\n    multiple: PropTypes.bool.description('Whether to allow multiple options to be selected.'),\n    onChange: PropTypes.func.description('Function that will be called when the user selects an option.'),\n    onClose: PropTypes.func.description('Function that will be called when the Select drop closes.'),\n    onSearch: PropTypes.func.description('Function that will be called when the user types in the search input.\\n      If this property is not provided, no search field will be rendered.'),\n    options: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.object])).description('Options can be either a string or an object. If an object is used, use\\n      children callback in order to render anything based on the current item.').isRequired,\n    placeholder: PropTypes.string.description('Placeholder text to use when no value is provided.'),\n    plain: PropTypes.bool.description('Whether this is a plain Select input with no border or padding.'),\n    searchPlaceholder: PropTypes.string.description('Placeholder text to use in the search box when the search input is empty.'),\n    selected: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]).description('Index of the currently selected option. When multiple, the set of\\n      options selected. This property is required when multiple.'),\n    size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']).description('The size of the select.'),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]).description('Currently selected value. This can be an array\\n      when multiple. Passing an element allows the caller to control how\\n      the value is rendered.')\n  };\n\n  return DocumentedSelect;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Select/doc.js\n// module id = ./node_modules/grommet/es6/components/Select/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nimport SkipLink from './SkipLink';\n\nexport default (function (SkipLinks) {\n  var DocumentedSkipLinks = describe(SkipLinks).availableAt(getAvailableAtBadge('SkipLinks')).description('Describe a list of elements to skip to.').usage('import { SkipLinks } from \\'grommet\\';\\n<SkipLinks elements={[\\'main\\', \\'footer\\']} />');\n\n  DocumentedSkipLinks.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.instanceOf(SkipLink)).description('SkipLink array').isRequired,\n    messages: PropTypes.shape({\n      skipTo: PropTypes.string\n    }).description('Custom messages for SkipLinks. Used for accessibility by screen readers.')\n  };\n\n  return DocumentedSkipLinks;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/SkipLinks/doc.js\n// module id = ./node_modules/grommet/es6/components/SkipLinks/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Stack) {\n  var DocumentedStack = describe(Stack).availableAt(getAvailableAtBadge('Stack')).description('Stacks components on top of the first child component.').usage('import { Stack } from \\'grommet\\';\\n<Stack />');\n\n  DocumentedStack.propTypes = {\n    anchor: PropTypes.oneOf(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'bottom-left', 'top-right', 'bottom-right']).description('Where to anchor children from. If not specified, children\\n      fill the guiding child\\'s area.'),\n    fill: PropTypes.bool.description('Whether to expand to fill\\n      all of the available width and height in the parent container.'),\n    guidingChild: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['first', 'last'])]).description('Which child to guide layout from. All other children\\n      will be positioned within that area. Defaults to \\'first\\'.').defaultValue('first')\n  };\n\n  return DocumentedStack;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Stack/doc.js\n// module id = ./node_modules/grommet/es6/components/Stack/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport var docTableCell = function docTableCell(TableCell) {\n  var DocumentedTableCell = describe(TableCell).description('A cell of data in a table.').usage('import { TableCell } from \\'grommet\\';\\n<TableCell />');\n\n  DocumentedTableCell.propTypes = {\n    plain: PropTypes.bool.description('Whether default styling context should be removed.'),\n    scope: PropTypes.oneOf(['col', 'row']).description('For header cells, what scope the header is for.\\n        Typically, the cells in a TableHeader have \\'col\\' scope and\\n        the primary cell in each row in the TableBody has \\'row\\' scope.'),\n    size: PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', '1/2', '1/3', '2/3', '1/4', '3/4']).description('What size the cell should be. Typically, this is not needed\\n      unless you are trying to align multiple tables.')\n  };\n\n  return DocumentedTableCell;\n};\n\nexport var docTableRow = function docTableRow(TableRow) {\n  var DocumentedTableRow = describe(TableRow).description('A row of cells in a table.').usage('import { TableRow } from \\'grommet\\';\\n<TableRow />');\n\n  return DocumentedTableRow;\n};\n\nexport var docTableHeader = function docTableHeader(TableHeader) {\n  var DocumentedTableHeader = describe(TableHeader).description('The header of a table.').usage('import { TableHeader } from \\'grommet\\';\\n<TableHeader />');\n\n  return DocumentedTableHeader;\n};\n\nexport var docTableBody = function docTableBody(TableBody) {\n  var DocumentedTableBody = describe(TableBody).description('The body of a table.').usage('import { TableBody } from \\'grommet\\';\\n<TableBody />');\n\n  return DocumentedTableBody;\n};\n\nexport var docTableFooter = function docTableFooter(TableFooter) {\n  var DocumentedTableFooter = describe(TableFooter).description('The footer of a table.').usage('import { TableFooter } from \\'grommet\\';\\n<TableFooter />');\n\n  return DocumentedTableFooter;\n};\n\nexport default (function (Table) {\n  var DocumentedTable = describe(Table).availableAt(getAvailableAtBadge('Table')).description('A table of data organized in cells.').usage('import { Table, TableHeader, TableFooter, TableBody, TableRow } from \\'grommet\\';\\n<Table />');\n\n  DocumentedTable.propTypes = {\n    caption: PropTypes.string.description('One line description.')\n  };\n\n  return DocumentedTable;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Table/doc.js\n// module id = ./node_modules/grommet/es6/components/Table/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nimport Tab from './Tab';\n\nexport default (function (Tabs) {\n  var DocumentedTabs = describe(Tabs).availableAt(getAvailableAtBadge('Tabs')).description('A tabular view component.').usage('import { Tabs, Tab } from \\'grommet\\';\\n<Tabs>\\n  <Tab title=\\'Tab 1\\'>...</Tab>\\n  <Tab title=\\'Tab 2\\'>...</Tab>\\n</Tabs>');\n\n  DocumentedTabs.propTypes = {\n    activeIndex: PropTypes.number.description('Active tab index. If specified, Tabs will be a controlled component. This means that future\\ntab changes will not work unless you subscribe to onActive function and update activeIndex\\naccordingly.').defaultValue(0),\n    children: PropTypes.arrayOf(PropTypes.instanceOf(Tab)).description('Array of Tab.').isRequired,\n    justify: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the tabs along the main axis.').defaultValue('center'),\n    messages: PropTypes.shape({\n      tabContents: PropTypes.string\n    }).description('Custom messages for Tabs. Used for accessibility by screen readers.').defaultValue({\n      tabContents: 'Tab Contents'\n    }),\n    onActive: PropTypes.func.description('Function that will be called with the active tab index when the currently active\\ntab changes.')\n  };\n  return DocumentedTabs;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Tabs/doc.js\n// module id = ./node_modules/grommet/es6/components/Tabs/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Text) {\n  var DocumentedText = describe(Text).availableAt(getAvailableAtBadge('Text')).description('Arbitrary text.').usage('import { Text } from \\'grommet\\';\\n<Text />');\n\n  DocumentedText.propTypes = {\n    color: PropTypes.string.description('A color identifier to use for the text color. For example:\\n\\'status-critical\\'.'),\n    margin: PropTypes.oneOfType([PropTypes.oneOf(['none', 'small', 'medium', 'large']), PropTypes.shape({\n      bottom: PropTypes.oneOf(['small', 'medium', 'large']),\n      top: PropTypes.oneOf(['small', 'medium', 'large'])\n    })]).description('The amount of margin above and/or below the heading. An object can be\\nspecified to distinguish top margin and bottom margin.'),\n    size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'xxlarge']).description('The font size is primarily driven by the chosen tag. But, it can\\nbe adjusted via this size property. The tag should be set for semantic\\ncorrectness and accessibility. This size property allows for stylistic\\nadjustments.'),\n    tag: PropTypes.string.description('The DOM tag to use for the element.').defaultValue('span'),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the text inside the component.'),\n    truncate: PropTypes.bool.description('Restrict the text to a single line and truncate with ellipsis if it\\nis too long to all fit.'),\n    weight: PropTypes.oneOfType([PropTypes.oneOf(['normal', 'bold']), PropTypes.number]).description('Font weight')\n  };\n\n  return DocumentedText;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Text/doc.js\n// module id = ./node_modules/grommet/es6/components/Text/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (TextArea) {\n  var DocumentedTextArea = describe(TextArea).availableAt(getAvailableAtBadge('TextArea')).description('A textarea.').usage('import { TextArea } from \\'grommet\\';\\n<TextArea id=\\'item\\' name=\\'item\\' />');\n\n  DocumentedTextArea.propTypes = {\n    id: PropTypes.string.description('The id attribute of the textarea.'),\n    focusIndicator: PropTypes.bool.description('Whether the plain textarea should receive a focus outline.'),\n    name: PropTypes.string.description('The name attribute of the textarea.'),\n    placeholder: PropTypes.string.description('Placeholder text to use when no value is provided.'),\n    plain: PropTypes.bool.description('Whether this is a plain textarea with no border or padding.\\nOnly use this when the containing context provides sufficient affordance.'),\n    value: PropTypes.string.description('What text to put in the textarea.')\n  };\n\n  return DocumentedTextArea;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/TextArea/doc.js\n// module id = ./node_modules/grommet/es6/components/TextArea/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (TextInput) {\n  var DocumentedTextInput = describe(TextInput).availableAt(getAvailableAtBadge('TextInput')).description('A text input field with optional suggestions.').usage('import { TextInput } from \\'grommet\\';\\n<TextInput id=\\'item\\' name=\\'item\\' />');\n\n  DocumentedTextInput.propTypes = {\n    dropAlign: PropTypes.shape({\n      top: PropTypes.oneOf(['top', 'bottom']),\n      bottom: PropTypes.oneOf(['top', 'bottom']),\n      right: PropTypes.oneOf(['left', 'right']),\n      left: PropTypes.oneOf(['left', 'right'])\n    }).description('How to align the drop.').defaultValue({\n      top: 'top',\n      left: 'left'\n    }),\n    dropTarget: PropTypes.object.description('Target where any suggestions drop will be aligned to. This should be\\n      a React reference. Typically, this is not required as the drop will be\\n      aligned to the TextInput itself by default.'),\n    id: PropTypes.string.description('The id attribute of the input.'),\n    focusIndicator: PropTypes.bool.description('Whether the plain text input should receive a focus outline.'),\n    messages: PropTypes.shape({\n      enterSelect: PropTypes.string,\n      suggestionsCount: PropTypes.string,\n      suggestionsExist: PropTypes.string,\n      suggestionIsOpen: PropTypes.string\n    }).description('Custom messages for TextInput. Used for accessibility by screen readers.').defaultValue({\n      enterSelect: '(Press Enter to Select)',\n      suggestionsCount: 'suggestions available',\n      suggestionsExist: 'This input has suggestions use arrow keys to navigate',\n      suggestionIsOpen: 'Suggestions drop is open, continue to use arrow keys to navigate'\n    }),\n    name: PropTypes.string.description('The name attribute of the input.'),\n    onInput: PropTypes.func.description('Function that will be called when the user types in the input.'),\n    onSelect: PropTypes.func.description('Function that will be called when the user selects a suggestion.\\nThe suggestion contains the object chosen from the supplied suggestions.'),\n    placeholder: PropTypes.string.description('Placeholder text to use when no value is provided.'),\n    plain: PropTypes.bool.description('Whether this is a plain input with no border or padding.\\nOnly use this when the containing context provides sufficient affordance'),\n    size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']).description('The size of the TextInput.'),\n    suggestions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n      label: PropTypes.node,\n      value: PropTypes.any\n    }), PropTypes.string])).description('Suggestions to show. It is recommended to avoid showing too many\\nsuggestions and instead rely on the user to type more.'),\n    value: PropTypes.string.description('What text to put in the input.')\n  };\n\n  return DocumentedTextInput;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/TextInput/doc.js\n// module id = ./node_modules/grommet/es6/components/TextInput/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (Video) {\n  var DocumentedVideo = describe(Video).availableAt(getAvailableAtBadge('Video')).description('A video player.').usage('import { Video } from \\'grommet\\';\\n<Video />');\n\n  DocumentedVideo.propTypes = {\n    autoPlay: PropTypes.bool.description('Enables automatic playback of the video as soon as it is loaded.'),\n    controls: PropTypes.oneOf([false, 'over', 'below']).description('Whether to show playback controls and where to place them.').defaultValue('over'),\n    fit: PropTypes.oneOf(['cover', 'contain']).description('How the image fills its container.'),\n    loop: PropTypes.bool.description('Enables continuous video looping.'),\n    mute: PropTypes.bool.description('Enables video muting. This option is best used with the autoPlay flag.')\n  };\n\n  return DocumentedVideo;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/Video/doc.js\n// module id = ./node_modules/grommet/es6/components/Video/doc.js\n// module chunks = 5","import { describe, PropTypes } from 'react-desc';\n\nimport { getAvailableAtBadge } from '../../utils';\n\nexport default (function (WorldMap) {\n  var DocumentedWorldMap = describe(WorldMap).availableAt(getAvailableAtBadge('WorldMap')).description('A map of the world, or a continent.').usage(\"import { WorldMap } from 'grommet';\\n<WorldMap />\");\n\n  DocumentedWorldMap.propTypes = {\n    color: PropTypes.string.description('Default color'),\n    continents: PropTypes.arrayOf(PropTypes.shape({\n      color: PropTypes.string,\n      name: PropTypes.oneOf(['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })).description('Continent details.'),\n    onSelectPlace: PropTypes.func.description('Called when the user clicks on a place.\\n        It is passed the location.'),\n    places: PropTypes.arrayOf(PropTypes.shape({\n      color: PropTypes.string,\n      name: PropTypes.string, // for a11y aria-label\n      location: PropTypes.arrayOf(PropTypes.number).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })).description('Place details.'),\n    hoverColor: PropTypes.string.description('Color when hovering over places while selecting.')\n  };\n\n  return DocumentedWorldMap;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/components/WorldMap/doc.js\n// module id = ./node_modules/grommet/es6/components/WorldMap/doc.js\n// module chunks = 5","import { rgba } from 'polished';\nimport { css } from 'styled-components';\n\nimport { colorForName, deepFreeze } from '../utils';\n\nvar brandColor = '#FFCA58';\nvar accentColors = ['#FD6FFF', '#60EB9F', '#60EBE1', '#FFCA58'];\nvar neutralColors = ['#EB6060', '#01C781', '#6095EB', '#FFB200'];\nvar statusColors = {\n  critical: '#FF3333',\n  error: '#FF3333',\n  warning: '#F7E464',\n  ok: '#7DD892',\n  unknown: '#a8a8a8',\n  disabled: '#a8a8a8'\n};\nvar lightColors = ['#333333', '#444444', '#555555', '#666666', '#777777', '#999999'];\nvar darkColors = ['#F6F6F6', '#EEEEEE', '#DDDDDD', '#CCCCCC', '#BBBBBB', '#AAAAAA'];\nvar backgroundColor = '#111111';\nvar textColor = '#eeeeee';\nvar borderColor = 'rgba(255, 255, 255, 0.33)';\nvar focusColor = accentColors[0];\nvar activeColor = rgba('#666666', 0.5);\n\nexport default deepFreeze({\n  global: {\n    colors: {\n      active: activeColor,\n      accent: accentColors,\n      background: backgroundColor,\n      black: '#000000',\n      border: borderColor,\n      brand: brandColor,\n      dark: darkColors,\n      darkBackground: {\n        text: textColor\n      },\n      focus: focusColor,\n      light: lightColors,\n      lightBackground: {\n        text: '#000000'\n      },\n      neutral: neutralColors,\n      placeholder: '#AAAAAA',\n      status: statusColors,\n      text: textColor,\n      white: '#FFFFFF'\n    },\n    drop: {\n      backgroundColor: '#333333',\n      border: {\n        width: '0px',\n        radius: '0px'\n      },\n      shadow: '0px 3px 8px rgba(100, 100, 100, 0.50)'\n    },\n    elevation: {\n      none: 'none',\n      xsmall: '0px 1px 2px rgba(100, 100, 100, 0.50)',\n      small: '0px 2px 4px rgba(100, 100, 100, 0.50)',\n      medium: '0px 3px 8px rgba(100, 100, 100, 0.50)',\n      large: '0px 6px 12px rgba(100, 100, 100, 0.50)',\n      xlarge: '0px 8px 16px rgba(100, 100, 100, 0.50)'\n    },\n    focus: {\n      border: {\n        color: css(['', ''], function (props) {\n          return colorForName('focus', props.theme);\n        }),\n        width: '2px'\n      }\n    },\n    hover: {\n      backgroundColor: css(['', ''], function (props) {\n        return props.theme.global.colors.active;\n      }),\n      textColor: '#FFFFFF'\n    },\n    input: {\n      border: {\n        width: '1px',\n        radius: '4px',\n        color: css(['', ''], function (props) {\n          return props.theme.global.colors.border;\n        })\n      },\n      weight: 700\n    }\n  },\n  icon: {\n    color: textColor\n  },\n  layer: {\n    backgroundColor: backgroundColor,\n    overlayBackgroundColor: 'rgba(48, 48, 48, 0.5)'\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/themes/dark.js\n// module id = ./node_modules/grommet/es6/themes/dark.js\n// module chunks = 5","import { rgba } from 'polished';\nimport { css } from 'styled-components';\n\nimport Actions from 'grommet-icons/icons/Actions';\nimport ClosedCaption from 'grommet-icons/icons/ClosedCaption';\nimport Expand from 'grommet-icons/icons/Expand';\nimport FormDown from 'grommet-icons/icons/FormDown';\nimport FormNext from 'grommet-icons/icons/FormNext';\nimport FormPrevious from 'grommet-icons/icons/FormPrevious';\nimport Next from 'grommet-icons/icons/Next';\nimport Pause from 'grommet-icons/icons/Pause';\nimport Play from 'grommet-icons/icons/Play';\nimport Previous from 'grommet-icons/icons/Previous';\nimport Subtract from 'grommet-icons/icons/Subtract';\nimport Volume from 'grommet-icons/icons/Volume';\nimport VolumeLow from 'grommet-icons/icons/VolumeLow';\n\n\nimport { colorForName, deepFreeze } from '../utils';\n\nvar brandColor = '#865CD6';\nvar accentColors = ['#FD6FFF', '#60EB9F', '#60EBE1', '#FFCA58'];\nvar neutralColors = ['#EB6060', '#01C781', '#6095EB', '#FFB200'];\nvar statusColors = {\n  critical: '#E1746A',\n  error: '#E1746A',\n  warning: '#F7E464',\n  ok: '#7DD892',\n  unknown: '#a8a8a8',\n  disabled: '#a8a8a8'\n};\nvar darkColors = ['#333333', '#444444', '#555555', '#666666', '#777777', '#999999'];\nvar lightColors = ['#F6F6F6', '#EEEEEE', '#DDDDDD', '#CCCCCC', '#BBBBBB', '#AAAAAA'];\nvar backgroundColor = '#FFFFFF';\nvar textColor = '#444444';\nvar borderColor = 'rgba(0, 0, 0, 0.33)';\nvar focusColor = accentColors[0];\nvar activeColor = rgba('#DDDDDD', 0.5);\nvar workSansPath = 'https://fonts.gstatic.com/s/worksans/v2';\n\nvar baseSpacing = 24;\n\nvar borderWidth = 2;\n\nexport default deepFreeze({\n  global: {\n    animation: {\n      duration: '1s',\n      jiggle: {\n        duration: '0.1s'\n      }\n    },\n    borderSize: {\n      xsmall: '1px',\n      small: '2px',\n      medium: baseSpacing / 6 + 'px',\n      large: baseSpacing / 2 + 'px',\n      xlarge: baseSpacing + 'px',\n      narrow: {\n        xsmall: '1px',\n        small: '2px',\n        medium: baseSpacing / 6 + 'px',\n        large: baseSpacing / 4 + 'px',\n        xlarge: baseSpacing / 2 + 'px'\n      }\n    },\n    breakpoints: {\n      narrow: 699\n    },\n    centerColumnWidth: baseSpacing * 48 + 'px',\n    colors: {\n      active: activeColor,\n      accent: accentColors,\n      black: '#000000',\n      border: borderColor,\n      brand: brandColor,\n      dark: darkColors,\n      darkBackground: {\n        text: '#FFFFFF'\n      },\n      focus: focusColor,\n      light: lightColors,\n      lightBackground: {\n        text: textColor\n      },\n      neutral: neutralColors,\n      placeholder: '#AAAAAA',\n      status: statusColors,\n      text: textColor,\n      white: '#FFFFFF'\n    },\n    control: {\n      border: {\n        width: '2px'\n      },\n      font: {\n        weight: 600,\n        size: '19px'\n      }\n    },\n    drop: {\n      backgroundColor: '#f8f8f8',\n      border: {\n        width: '0px',\n        radius: '0px'\n      },\n      shadow: '0px 3px 8px rgba(100, 100, 100, 0.50)'\n    },\n    edgeSize: {\n      none: '0',\n      xsmall: baseSpacing / 4 + 'px',\n      small: baseSpacing / 2 + 'px',\n      medium: baseSpacing + 'px',\n      large: baseSpacing * 2 + 'px',\n      xlarge: baseSpacing * 4 + 'px',\n      narrow: {\n        none: '0',\n        xsmall: baseSpacing / 8 + 'px',\n        small: baseSpacing / 4 + 'px',\n        medium: baseSpacing / 2 + 'px',\n        large: baseSpacing + 'px',\n        xlarge: baseSpacing * 2 + 'px'\n      }\n    },\n    elevation: {\n      none: 'none',\n      xsmall: '0px 1px 2px rgba(100, 100, 100, 0.50)',\n      small: '0px 2px 4px rgba(100, 100, 100, 0.50)',\n      medium: '0px 3px 8px rgba(100, 100, 100, 0.50)',\n      large: '0px 6px 12px rgba(100, 100, 100, 0.50)',\n      xlarge: '0px 8px 16px rgba(100, 100, 100, 0.50)'\n    },\n    focus: {\n      border: {\n        color: css(['', ''], function (props) {\n          return colorForName('focus', props.theme);\n        }),\n        width: '2px'\n      }\n    },\n    font: {\n      family: \"'Work Sans', Arial, sans-serif\",\n      face: '\\n        @font-face {\\n          font-family: \\'Work Sans\\';\\n          font-style: normal;\\n          font-weight: 300;\\n          src:\\n            local(\\'Work Sans Light\\'),\\n            local(\\'WorkSans-Light\\'),\\n            url(\"' + workSansPath + '/FD_Udbezj8EHXbdsqLUplxampu5_7CjHW5spxoeN3Vs.woff2\") format(\\'woff2\\');\\n        }\\n\\n        @font-face {\\n          font-family: \\'Work Sans\\';\\n          font-style: normal;\\n          font-weight: 400;\\n          src:\\n            local(\\'Work Sans\\'),\\n            local(\\'WorkSans-Regular\\'),\\n            url(\"' + workSansPath + '/ElUAY9q6T0Ayx4zWzW63VJBw1xU1rKptJj_0jans920.woff2\") format(\\'woff2\\');\\n        }\\n\\n        @font-face {\\n          font-family: \\'Work Sans\\';\\n          font-style: normal;\\n          font-weight: 500;\\n          src:\\n            local(\\'Work Sans Medium\\'),\\n            local(\\'WorkSans-Medium\\'),\\n            url(\"' + workSansPath + '/Nbre-U_bp6Xktt8cpgwaJBampu5_7CjHW5spxoeN3Vs.woff2\") format(\\'woff2\\');\\n        }\\n\\n        @font-face {\\n          font-family: \\'Work Sans\\';\\n          font-style: normal;\\n          font-weight: 600;\\n          src:\\n            local(\\'Work Sans SemiBold\\'),\\n            local(\\'WorkSans-SemiBold\\'),\\n            url(\"' + workSansPath + '/z9rX03Xuz9ZNHTMg1_ghGRampu5_7CjHW5spxoeN3Vs.woff2\") format(\\'woff2\\');\\n        }\\n\\n        @font-face {\\n          font-family: \\'Work Sans\\';\\n          font-style: normal;\\n          font-weight: 700;\\n          src:\\n            local(\\'Work Sans Bold\\'),\\n            local(\\'WorkSans-Bold\\'),\\n            url(\"' + workSansPath + '/4udXuXg54JlPEP5iKO5AmRampu5_7CjHW5spxoeN3Vs.woff2\") format(\\'woff2\\');\\n        }\\n      ',\n      size: '16px'\n    },\n    hover: {\n      backgroundColor: css(['', ''], function (props) {\n        return props.theme.global.colors.active;\n      }),\n      textColor: '#000000'\n    },\n    input: {\n      border: {\n        width: '1px',\n        radius: '4px',\n        color: css(['', ''], function (props) {\n          return props.theme.global.colors.border;\n        })\n      },\n      weight: 700\n    },\n    lineHeight: '24px',\n    opacity: {\n      strong: '0.8',\n      medium: '0.4',\n      weak: '0.1'\n    },\n    spacing: baseSpacing + 'px',\n    size: {\n      xxsmall: baseSpacing * 2 + 'px', // 48\n      xsmall: baseSpacing * 4 + 'px', // 96\n      small: baseSpacing * 8 + 'px', // 192\n      medium: baseSpacing * 16 + 'px', // 384\n      large: baseSpacing * 32 + 'px', // 768\n      xlarge: baseSpacing * 48 + 'px', // 1152\n      full: '100%',\n      narrow: {\n        xxsmall: baseSpacing + 'px', // 24\n        xsmall: baseSpacing * 2 + 'px', // 48\n        small: baseSpacing * 4 + 'px', // 96\n        medium: baseSpacing * 8 + 'px', // 192\n        large: baseSpacing * 16 + 'px', // 384\n        xlarge: baseSpacing * 32 + 'px', // 768\n        full: '100%'\n      }\n    }\n  },\n  anchor: {\n    textDecoration: 'none',\n    fontWeight: 600,\n    color: css(['', ''], function (props) {\n      return props.theme.global.colors.brand;\n    })\n  },\n  button: {\n    border: {\n      color: css(['', ''], function (props) {\n        return props.theme.global.colors.brand;\n      }),\n      width: borderWidth + 'px',\n      radius: baseSpacing + 'px'\n    },\n    colors: {\n      accent: css(['', ''], function (props) {\n        return colorForName('accent-1', props.theme);\n      }),\n      critical: css(['', ''], function (props) {\n        return props.theme.global.colors.status.critical;\n      }),\n      secondary: css(['', ''], function (props) {\n        return colorForName('neutral-2', props.theme);\n      }),\n      text: css(['', ''], function (props) {\n        return props.theme.global.colors.text;\n      })\n    },\n    disabled: {\n      opacity: 0.3\n    },\n    minWidth: baseSpacing * 4 + 'px',\n    maxWidth: baseSpacing * 16 + 'px',\n    padding: {\n      vertical: baseSpacing / 2 - borderWidth + 'px',\n      horizontal: baseSpacing * 2 - borderWidth + 'px'\n    }\n  },\n  calendar: {\n    small: {\n      fontSize: '16px',\n      lineHeight: 1.375,\n      daySize: baseSpacing * 8 / 7 + 'px',\n      slideDuration: '0.2s'\n    },\n    medium: {\n      fontSize: '22px',\n      lineHeight: 1.45,\n      daySize: baseSpacing * 16 / 7 + 'px',\n      slideDuration: '0.5s'\n    },\n    large: {\n      fontSize: '36px',\n      lineHeight: 1.11,\n      daySize: baseSpacing * 32 / 7 + 'px',\n      slideDuration: '0.8s'\n    },\n    icons: {\n      previous: Previous,\n      next: Next,\n      small: {\n        previous: FormPrevious,\n        next: FormNext\n      }\n    }\n  },\n  carousel: {\n    icons: {\n      current: Subtract,\n      next: Next,\n      previous: Previous\n    }\n  },\n  checkBox: {\n    check: {\n      color: css(['', ''], function (props) {\n        return props.theme.global.colors.brand;\n      }),\n      width: '4px'\n    },\n    border: {\n      color: {\n        dark: 'rgba(255, 255, 255, 0.5)',\n        light: 'rgba(0, 0, 0, 0.15)'\n      },\n      radius: '4px',\n      width: '2px'\n    },\n    size: baseSpacing + 'px',\n    toggle: {\n      color: '#d9d9d9',\n      radius: baseSpacing + 'px',\n      size: baseSpacing * 2 + 'px'\n    }\n  },\n  clock: {\n    analog: {\n      hour: {\n        color: {\n          dark: css(['', ''], function (props) {\n            return colorForName('light-3', props.theme);\n          }),\n          light: css(['', ''], function (props) {\n            return colorForName('dark-3', props.theme);\n          })\n        },\n        width: baseSpacing / 3 + 'px',\n        size: baseSpacing + 'px',\n        shape: 'round'\n      },\n      minute: {\n        color: {\n          dark: css(['', ''], function (props) {\n            return colorForName('light-5', props.theme);\n          }),\n          light: css(['', ''], function (props) {\n            return colorForName('dark-5', props.theme);\n          })\n        },\n        width: baseSpacing / 6 + 'px',\n        size: Math.round(baseSpacing / 2) + 'px',\n        shape: 'round'\n      },\n      second: {\n        color: {\n          dark: css(['', ''], function (props) {\n            return colorForName('accent-2', props.theme);\n          }),\n          light: css(['', ''], function (props) {\n            return colorForName('accent-2', props.theme);\n          })\n        },\n        width: baseSpacing / 8 + 'px',\n        size: Math.round(baseSpacing / 2.666) + 'px',\n        shape: 'round'\n      },\n      size: {\n        small: baseSpacing * 3 + 'px',\n        medium: baseSpacing * 4 + 'px',\n        large: baseSpacing * 6 + 'px',\n        xlarge: baseSpacing * 9 + 'px',\n        huge: baseSpacing * 12 + 'px'\n      }\n    },\n    digital: {\n      text: {\n        medium: { size: '16px', height: 1.375 },\n        xsmall: { size: '12px', height: 1.5 },\n        small: { size: '14px', height: 1.43 },\n        large: { size: '24px', height: 1.167 },\n        xlarge: { size: '32px', height: 1.1875 },\n        xxlarge: { size: '48px', height: 1.125 }\n      }\n    }\n  },\n  formField: {\n    border: {\n      color: 'border',\n      position: 'inner',\n      side: 'bottom',\n      error: {\n        color: 'status-critical'\n      }\n    },\n    error: { color: 'status-critical' },\n    help: { color: 'dark-5' },\n    label: {}\n  },\n  grommet: {},\n  heading: {\n    font: {\n      family: \"'Zilla Slab', 'Work Sans', Arial, sans-serif\",\n      face: '\\n        @font-face {\\n          font-family: \\'Zilla Slab\\';\\n          font-style: normal;\\n          font-weight: 400;\\n          src:\\n            local(\\'Zilla Slab Regular\\'),\\n            local(\\'ZillaSlab-Regular\\'),\\n            url(\"https://s3.amazonaws.com/grommetfonts/ZillaSlab-Regular.ttf\") format(\\'ttf\\');\\n        }\\n\\n        @font-face {\\n          font-family: \\'Zilla Slab\\';\\n          font-style: normal;\\n          font-weight: 600;\\n          src:\\n            local(\\'Zilla Slab SemiBold\\'),\\n            local(\\'ZillaSlab-SemiBold\\'),\\n            url(\"https://s3.amazonaws.com/grommetfonts/ZillaSlab-SemiBold.ttf\") format(\\'ttf\\');\\n        }\\n      '\n    },\n    // maxWidth chosen to be ~50 characters wide\n    // see: https://ux.stackexchange.com/a/34125\n    level: {\n      1: {\n        medium: { size: '48px', height: 1.125, maxWidth: baseSpacing * 48 + 'px' },\n        small: { size: '24px', height: 1.333, maxWidth: baseSpacing * 24 + 'px' },\n        large: { size: '96px', height: 1.125, maxWidth: baseSpacing * 96 + 'px' }\n      },\n      2: {\n        medium: { size: '36px', height: 1.23, maxWidth: baseSpacing * 36 + 'px' },\n        small: { size: '18px', height: 1.333, maxWidth: baseSpacing * 18 + 'px' },\n        large: { size: '48px', height: 1.125, maxWidth: baseSpacing * 48 + 'px' }\n      },\n      3: {\n        medium: { size: '24px', height: 1.333, maxWidth: baseSpacing * 24 + 'px' },\n        small: { size: '18px', height: 1.333, maxWidth: baseSpacing * 18 + 'px' },\n        large: { size: '36px', height: 1.23, maxWidth: baseSpacing * 36 + 'px' }\n      },\n      4: {\n        medium: { size: '18px', height: 1.333, maxWidth: baseSpacing * 18 + 'px' },\n        small: { size: '16px', height: 1.375, maxWidth: baseSpacing * 16 + 'px' },\n        large: { size: '24px', height: 1.333, maxWidth: baseSpacing * 24 + 'px' }\n      }\n    },\n    weight: 600\n  },\n  icon: {\n    extend: css(['', ' ', ''], function (props) {\n      return props.color && props.color !== 'plain' && '\\n        fill: ' + colorForName(props.color, props.theme) + ';\\n        stroke: ' + colorForName(props.color, props.theme) + ';\\n      ';\n    }, function (props) {\n      return props.dark && '\\n        fill: ' + props.theme.global.colors.darkBackground.text + ';\\n        stroke: ' + props.theme.global.colors.darkBackground.text + ';\\n      ';\n    })\n  },\n  layer: {\n    backgroundColor: backgroundColor,\n    border: {\n      radius: '4px'\n    },\n    overlayBackgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  menu: {\n    icons: {\n      down: FormDown\n    }\n  },\n  paragraph: {\n    // maxWidth chosen to be ~50 characters wide\n    // see: https://ux.stackexchange.com/a/34125\n    medium: { size: '16px', height: 1.375, maxWidth: baseSpacing * 16 + 'px' },\n    small: { size: '14px', height: 1.43, maxWidth: baseSpacing * 14 + 'px' },\n    large: { size: '24px', height: 1.333, maxWidth: baseSpacing * 24 + 'px' },\n    xlarge: { size: '32px', height: 1.1875, maxWidth: baseSpacing * 32 + 'px' }\n  },\n  radioButton: {\n    check: {\n      color: css(['', ''], function (props) {\n        return props.theme.global.colors.brand;\n      })\n    },\n    border: {\n      color: {\n        dark: 'rgba(255, 255, 255, 0.5)',\n        light: 'rgba(0, 0, 0, 0.15)'\n      },\n      radius: '100%',\n      width: '2px'\n    },\n    size: baseSpacing + 'px'\n  },\n  rangeInput: {\n    track: {\n      color: css(['', ''], function (props) {\n        return rgba(props.theme.global.colors.text, 0.2);\n      })\n    }\n  },\n  select: {\n    icons: {\n      down: FormDown\n    }\n  },\n  text: {\n    medium: { size: '16px', height: 1.375 },\n    xsmall: { size: '12px', height: 1.5 },\n    small: { size: '14px', height: 1.43 },\n    large: { size: '24px', height: 1.167 },\n    xlarge: { size: '32px', height: 1.1875 },\n    xxlarge: { size: '48px', height: 1.125 }\n  },\n  video: {\n    captions: {\n      background: rgba(0, 0, 0, 0.7)\n    },\n    icons: {\n      closedCaption: ClosedCaption,\n      configure: Actions,\n      fullScreen: Expand,\n      pause: Pause,\n      play: Play,\n      reduceVolume: VolumeLow,\n      volume: Volume\n    }\n  },\n  worldMap: {\n    continent: {\n      active: '8px',\n      base: '6px'\n    },\n    place: {\n      active: '20px',\n      base: '8px'\n    }\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/themes/vanilla.js\n// module id = ./node_modules/grommet/es6/themes/vanilla.js\n// module chunks = 5","import { PropTypes } from 'react-desc';\n\nexport var a11yTitlePropType = PropTypes.string.description('Custom title to be used by screen readers.');\n\nexport var backgroundPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  color: PropTypes.string,\n  opacity: PropTypes.oneOfType([PropTypes.oneOf(['weak', 'medium', 'strong']), PropTypes.bool])\n})]).description('Background color');\n\nexport default { a11yTitlePropType: a11yTitlePropType, backgroundPropType: backgroundPropType };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/utils/prop-types.js\n// module id = ./node_modules/grommet/es6/utils/prop-types.js\n// module chunks = 5","import { PropTypes } from 'react-desc';\n\nexport var ROUTER_PROPS = {\n  path: PropTypes.string.description('Indicates the path to be used for react-router link.').isRequired,\n  method: PropTypes.oneOf(['push', 'replace']).description('Indicates whether the browser history should be appended to or replaced.').defaultValue('push')\n};\n\nexport default { ROUTER_PROPS: ROUTER_PROPS };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grommet/es6/utils/router.js\n// module id = ./node_modules/grommet/es6/utils/router.js\n// module chunks = 5","//      \n\n// @private\nfunction capitalizeString(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n//      \nvar positionMap = ['Top', 'Right', 'Bottom', 'Left'];\n\nfunction generateProperty(property, position) {\n  if (!property) return position.toLowerCase();\n  var splitProperty = property.split('-');\n  if (splitProperty.length > 1) {\n    splitProperty.splice(1, 0, position);\n    return splitProperty.reduce(function (acc, val) {\n      return '' + acc + capitalizeString(val);\n    });\n  }\n  var joinedProperty = property.replace(/([a-z])([A-Z])/g, '$1' + position + '$2');\n  return property === joinedProperty ? '' + property + position : joinedProperty;\n}\n\nfunction generateStyles(property, valuesWithDefaults) {\n  var styles = {};\n  for (var i = 0; i < valuesWithDefaults.length; i += 1) {\n    if (valuesWithDefaults[i] || valuesWithDefaults[i] === 0) {\n      styles[generateProperty(property, positionMap[i])] = valuesWithDefaults[i];\n    }\n  }\n  return styles;\n}\n\n/**\n * A helper that enables shorthand for direction based properties. It accepts a property (hyphenated or camelCased) and up to four values that map to top, right, bottom, and left, respectively. You can optionally pass an empty string to get only the directional values as properties. You can also optionally pass a null argument for a directional value to ignore it.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...directionalProperty('padding', '12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${directionalProperty('padding', '12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'paddingTop': '12px',\n *   'paddingRight': '24px',\n *   'paddingBottom': '36px',\n *   'paddingLeft': '48px'\n * }\n */\n\nfunction directionalProperty(property) {\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  //  prettier-ignore\n  var firstValue = values[0],\n      _values$ = values[1],\n      secondValue = _values$ === undefined ? firstValue : _values$,\n      _values$2 = values[2],\n      thirdValue = _values$2 === undefined ? firstValue : _values$2,\n      _values$3 = values[3],\n      fourthValue = _values$3 === undefined ? secondValue : _values$3;\n\n  var valuesWithDefaults = [firstValue, secondValue, thirdValue, fourthValue];\n  return generateStyles(property, valuesWithDefaults);\n}\n\n//      \n\nfunction endsWith (string, suffix) {\n  return string.substr(-suffix.length) === suffix;\n}\n\n//      \n\n/**\n * Strip the unit from a given CSS value, returning just the number. (or the original value if an invalid string was passed)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   '--dimension': stripUnit('100px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   --dimension: ${stripUnit('100px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   '--dimension': 100\n * }\n */\n\nfunction stripUnit(value) {\n  var unitlessValue = parseFloat(value);\n  if (isNaN(unitlessValue)) return value;\n  return unitlessValue;\n}\n\n//      \n\n/**\n * Factory function that creates pixel-to-x converters\n * @private\n */\nvar pxtoFactory = function pxtoFactory(to) {\n  return function (pxval) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '16px';\n\n    var newPxval = pxval;\n    var newBase = base;\n    if (typeof pxval === 'string') {\n      if (!endsWith(pxval, 'px')) {\n        throw new Error('Expected a string ending in \"px\" or a number passed as the first argument to ' + to + '(), got \"' + pxval + '\" instead.');\n      }\n      newPxval = stripUnit(pxval);\n    }\n\n    if (typeof base === 'string') {\n      if (!endsWith(base, 'px')) {\n        throw new Error('Expected a string ending in \"px\" or a number passed as the second argument to ' + to + '(), got \"' + base + '\" instead.');\n      }\n      newBase = stripUnit(base);\n    }\n\n    if (typeof newPxval === 'string') {\n      throw new Error('Passed invalid pixel value (\"' + pxval + '\") to ' + to + '(), please pass a value like \"12px\" or 12.');\n    }\n\n    if (typeof newBase === 'string') {\n      throw new Error('Passed invalid base value (\"' + base + '\") to ' + to + '(), please pass a value like \"12px\" or 12.');\n    }\n\n    return '' + newPxval / newBase + to;\n  };\n};\n\n//      \n/**\n * Convert pixel value to ems. The default base value is 16px, but can be changed by passing a\n * second argument to the function.\n * @function\n * @param {string|number} pxval\n * @param {string|number} [base='16px']\n * @example\n * // Styles as object usage\n * const styles = {\n *   'height': em('16px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   height: ${em('16px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'height': '1em'\n * }\n */\n\nvar em = /*#__PURE__*/pxtoFactory('em');\n\n//      \n\nvar ratioNames = {\n  minorSecond: 1.067,\n  majorSecond: 1.125,\n  minorThird: 1.2,\n  majorThird: 1.25,\n  perfectFourth: 1.333,\n  augFourth: 1.414,\n  perfectFifth: 1.5,\n  minorSixth: 1.6,\n  goldenSection: 1.618,\n  majorSixth: 1.667,\n  minorSeventh: 1.778,\n  majorSeventh: 1.875,\n  octave: 2,\n  majorTenth: 2.5,\n  majorEleventh: 2.667,\n  majorTwelfth: 3,\n  doubleOctave: 4\n\n  /** */\n\n  /**\n   * Establish consistent measurements and spacial relationships throughout your projects by incrementing up or down a defined scale. We provide a list of commonly used scales as pre-defined variables, see below.\n   * @example\n   * // Styles as object usage\n   * const styles = {\n   *    // Increment two steps up the default scale\n   *   'fontSize': modularScale(2)\n   * }\n   *\n   * // styled-components usage\n   * const div = styled.div`\n   *    // Increment two steps up the default scale\n   *   fontSize: ${modularScale(2)}\n   * `\n   *\n   * // CSS in JS Output\n   *\n   * element {\n   *   'fontSize': '1.77689em'\n   * }\n   */\n};function modularScale(steps) {\n  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1em';\n  var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'perfectFourth';\n\n  if (typeof steps !== 'number') {\n    throw new Error('Please provide a number of steps to the modularScale helper.');\n  }\n  if (typeof ratio === 'string' && !ratioNames[ratio]) {\n    throw new Error('Please pass a number or one of the predefined scales to the modularScale helper as the ratio.');\n  }\n\n  var realBase = typeof base === 'string' ? stripUnit(base) : base;\n  var realRatio = typeof ratio === 'string' ? ratioNames[ratio] : ratio;\n\n  if (typeof realBase === 'string') {\n    throw new Error('Invalid value passed as base to modularScale, expected number or em string but got \"' + base + '\"');\n  }\n\n  return realBase * Math.pow(realRatio, steps) + 'em';\n}\n\n//      \n\n/**\n * Convert pixel value to rems. The default base value is 16px, but can be changed by passing a\n * second argument to the function.\n * @function\n * @param {string|number} pxval\n * @param {string|number} [base='16px']\n * @example\n * // Styles as object usage\n * const styles = {\n *   'height': rem('16px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   height: ${rem('16px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'height': '1rem'\n * }\n */\n\nvar rem = /*#__PURE__*/pxtoFactory('rem');\n\n//      \n\n/**\n * CSS to contain a float (credit to CSSMojo).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *    ...clearFix(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${clearFix()}\n * `\n *\n * // CSS as JS Output\n *\n * '&::after': {\n *   'clear': 'both',\n *   'content': '\"\"',\n *   'display': 'table'\n * }\n */\n\nfunction clearFix() {\n  var _ref;\n\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '&';\n\n  var pseudoSelector = parent + '::after';\n  return _ref = {}, _ref[pseudoSelector] = {\n    clear: 'both',\n    content: '\"\"',\n    display: 'table'\n  }, _ref;\n}\n\n//      \n\n/**\n * CSS to represent truncated text with an ellipsis.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...ellipsis('250px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${ellipsis('250px')}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   'display': 'inline-block',\n *   'maxWidth': '250px',\n *   'overflow': 'hidden',\n *   'textOverflow': 'ellipsis',\n *   'whiteSpace': 'nowrap',\n *   'wordWrap': 'normal'\n * }\n */\n\nfunction ellipsis() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '100%';\n\n  return {\n    display: 'inline-block',\n    maxWidth: width,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal'\n  };\n}\n\n//      \n\n/** */\n\nfunction generateFileReferences(fontFilePath, fileFormats) {\n  var fileFontReferences = fileFormats.map(function (format) {\n    return 'url(\"' + fontFilePath + '.' + format + '\")';\n  });\n  return fileFontReferences.join(', ');\n}\n\nfunction generateLocalReferences(localFonts) {\n  var localFontReferences = localFonts.map(function (font) {\n    return 'local(\"' + font + '\")';\n  });\n  return localFontReferences.join(', ');\n}\n\nfunction generateSources(fontFilePath, localFonts, fileFormats) {\n  var fontReferences = [];\n  if (localFonts) fontReferences.push(generateLocalReferences(localFonts));\n  if (fontFilePath) {\n    fontReferences.push(generateFileReferences(fontFilePath, fileFormats));\n  }\n  return fontReferences.join(', ');\n}\n\n/**\n * CSS for a @font-face declaration.\n *\n * @example\n * // Styles as object basic usage\n * const styles = {\n *    ...fontFace({\n *      'fontFamily': 'Sans-Pro'\n *      'fontFilePath': 'path/to/file'\n *    })\n * }\n *\n * // styled-components basic usage\n * injectGlobal`${\n *   fontFace({\n *     'fontFamily': 'Sans-Pro'\n *     'fontFilePath': 'path/to/file'\n *   }\n * )}`\n *\n * // CSS as JS Output\n *\n * '@font-face': {\n *   'fontFamily': 'Sans-Pro',\n *   'src': 'url(\"path/to/file.eot\"), url(\"path/to/file.woff2\"), url(\"path/to/file.woff\"), url(\"path/to/file.ttf\"), url(\"path/to/file.svg\")',\n * }\n */\n\nfunction fontFace(_ref) {\n  var fontFamily = _ref.fontFamily,\n      fontFilePath = _ref.fontFilePath,\n      fontStretch = _ref.fontStretch,\n      fontStyle = _ref.fontStyle,\n      fontVariant = _ref.fontVariant,\n      fontWeight = _ref.fontWeight,\n      _ref$fileFormats = _ref.fileFormats,\n      fileFormats = _ref$fileFormats === undefined ? ['eot', 'woff2', 'woff', 'ttf', 'svg'] : _ref$fileFormats,\n      localFonts = _ref.localFonts,\n      unicodeRange = _ref.unicodeRange;\n\n  // Error Handling\n  if (!fontFamily) throw new Error('fontFace expects a name of a font-family.');\n  if (!fontFilePath && !localFonts) {\n    throw new Error('fontFace expects either the path to the font file(s) or a name of a local copy.');\n  }\n  if (localFonts && !Array.isArray(localFonts)) {\n    throw new Error('fontFace expects localFonts to be an array.');\n  }\n  if (!Array.isArray(fileFormats)) {\n    throw new Error('fontFace expects fileFormats to be an array.');\n  }\n\n  var fontFaceDeclaration = {\n    '@font-face': {\n      fontFamily: fontFamily,\n      src: generateSources(fontFilePath, localFonts, fileFormats),\n      unicodeRange: unicodeRange,\n      fontStretch: fontStretch,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight\n    }\n\n    // Removes undefined fields for cleaner css object.\n  };return JSON.parse(JSON.stringify(fontFaceDeclaration));\n}\n\n//      \n\n/**\n * CSS to hide text to show a background image in a SEO-friendly way.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'backgroundImage': 'url(logo.png)',\n *   ...hideText(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   backgroundImage: url(logo.png);\n *   ${hideText()};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'backgroundImage': 'url(logo.png)',\n *   'textIndent': '101%',\n *   'overflow': 'hidden',\n *   'whiteSpace': 'nowrap',\n * }\n */\n\nfunction hideText() {\n  return {\n    textIndent: '101%',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap'\n  };\n}\n\n//      \n\n/**\n * CSS to hide content visually but remain accessible to screen readers.\n * from [HTML5 Boilerplate](https://github.com/h5bp/html5-boilerplate/blob/9a176f57af1cfe8ec70300da4621fb9b07e5fa31/src/css/main.css#L121)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...hideVisually(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${hideVisually()};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'border': '0',\n *   'clip': 'rect(0 0 0 0)',\n *   'clipPath': 'inset(50%)',\n *   'height': '1px',\n *   'margin': '-1px',\n *   'overflow': 'hidden',\n *   'padding': '0',\n *   'position': 'absolute',\n *   'whiteSpace': 'nowrap',\n *   'width': '1px',\n * }\n */\n\nfunction hideVisually() {\n  return {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    width: '1px'\n  };\n}\n\n//      \n\n/**\n * Generates a media query to target HiDPI devices.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *  [hiDPI(1.5)]: {\n *    width: 200px;\n *  }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${hiDPI(1.5)} {\n *     width: 200px;\n *   }\n * `\n *\n * // CSS as JS Output\n *\n * '@media only screen and (-webkit-min-device-pixel-ratio: 1.5),\n *  only screen and (min--moz-device-pixel-ratio: 1.5),\n *  only screen and (-o-min-device-pixel-ratio: 1.5/1),\n *  only screen and (min-resolution: 144dpi),\n *  only screen and (min-resolution: 1.5dppx)': {\n *   'width': '200px',\n * }\n */\n\nfunction hiDPI() {\n  var ratio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.3;\n\n  return \"\\n    @media only screen and (-webkit-min-device-pixel-ratio: \" + ratio + \"),\\n    only screen and (min--moz-device-pixel-ratio: \" + ratio + \"),\\n    only screen and (-o-min-device-pixel-ratio: \" + ratio + \"/1),\\n    only screen and (min-resolution: \" + Math.round(ratio * 96) + \"dpi),\\n    only screen and (min-resolution: \" + ratio + \"dppx)\\n  \";\n}\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\nvar _opinionatedRules;\nvar _abbrTitle;\nvar _unopinionatedRules;\n\n//      \nvar opinionatedRules = (_opinionatedRules = {\n  html: {\n    fontFamily: 'sans-serif'\n  },\n\n  body: {\n    margin: '0'\n  }\n\n}, _opinionatedRules['a:active,\\n  a:hover'] = {\n  outlineWidth: '0'\n}, _opinionatedRules['button,\\n  input,\\n  optgroup,\\n  select,\\n  textarea'] = {\n  fontFamily: 'sans-serif',\n  fontSize: '100%',\n  lineHeight: '1.15'\n}, _opinionatedRules);\n\nvar unopinionatedRules = (_unopinionatedRules = {\n  html: {\n    lineHeight: '1.15',\n    textSizeAdjust: '100%'\n  }\n\n}, _unopinionatedRules['article,\\n  aside,\\n  footer,\\n  header,\\n  nav,\\n  section'] = {\n  display: 'block'\n}, _unopinionatedRules.h1 = {\n  fontSize: '2em',\n  margin: '0.67em 0'\n}, _unopinionatedRules['figcaption,\\n  figure,\\n  main'] = {\n  display: 'block'\n}, _unopinionatedRules.figure = {\n  margin: '1em 40px'\n}, _unopinionatedRules.hr = {\n  boxSizing: 'content-box',\n  height: '0',\n  overflow: 'visible'\n}, _unopinionatedRules.pre = {\n  fontFamily: 'monospace, monospace',\n  fontSize: '1em'\n}, _unopinionatedRules.a = {\n  'background-color': 'transparent',\n  '-webkit-text-decoration-skip': 'objects'\n}, _unopinionatedRules['abbr[title]'] = (_abbrTitle = {\n  borderBottom: 'none',\n  textDecoration: 'underline'\n}, _abbrTitle['textDecoration'] = 'underline dotted', _abbrTitle), _unopinionatedRules['b,\\n  strong'] = {\n  fontWeight: 'inherit'\n}, _unopinionatedRules['code,\\n  kbd,\\n  samp'] = {\n  fontFamily: 'monospace, monospace',\n  fontSize: '1em'\n}, _unopinionatedRules.dfn = {\n  fontStyle: 'italic'\n}, _unopinionatedRules.mark = {\n  backgroundColor: '#ff0',\n  color: '#000'\n}, _unopinionatedRules.small = {\n  fontSize: '80%'\n}, _unopinionatedRules['sub,\\n  sup'] = {\n  fontSize: '75%',\n  lineHeight: '0',\n  position: 'relative',\n  verticalAlign: 'baseline'\n}, _unopinionatedRules.sub = {\n  bottom: '-0.25em'\n}, _unopinionatedRules.sup = {\n  top: '-0.5em'\n}, _unopinionatedRules['audio,\\n  video'] = {\n  display: 'inline-block'\n}, _unopinionatedRules['audio:not([controls])'] = {\n  display: 'none',\n  height: '0'\n}, _unopinionatedRules.img = {\n  borderStyle: 'none'\n}, _unopinionatedRules['svg:not(:root)'] = {\n  overflow: 'hidden'\n}, _unopinionatedRules['button,\\n  input,\\n  optgroup,\\n  select,\\n  textarea'] = {\n  margin: '0'\n}, _unopinionatedRules['button,\\n  input'] = {\n  overflow: 'visible'\n}, _unopinionatedRules['button,\\n  select'] = {\n  textTransform: 'none'\n}, _unopinionatedRules['button,\\n  html [type=\"button\"],\\n  [type=\"reset\"],\\n  [type=\"submit\"]'] = {\n  '-webkit-appearance': 'button'\n}, _unopinionatedRules['button::-moz-focus-inner,\\n  [type=\"button\"]::-moz-focus-inner,\\n  [type=\"reset\"]::-moz-focus-inner,\\n  [type=\"submit\"]::-moz-focus-inner'] = {\n  borderStyle: 'none',\n  padding: '0'\n}, _unopinionatedRules['button:-moz-focusring,\\n  [type=\"button\"]:-moz-focusring,\\n  [type=\"reset\"]:-moz-focusring,\\n  [type=\"submit\"]:-moz-focusring'] = {\n  outline: '1px dotted ButtonText'\n}, _unopinionatedRules.fieldset = {\n  border: '1px solid #c0c0c0',\n  margin: '0 2px',\n  padding: '0.35em 0.625em 0.75em'\n}, _unopinionatedRules.legend = {\n  boxSizing: 'border-box',\n  color: 'inherit',\n  display: 'table',\n  maxWidth: '100%',\n  padding: '0',\n  whiteSpace: 'normal'\n}, _unopinionatedRules.progress = {\n  display: 'inline-block',\n  verticalAlign: 'baseline'\n}, _unopinionatedRules.textarea = {\n  overflow: 'auto'\n}, _unopinionatedRules['[type=\"checkbox\"],\\n  [type=\"radio\"]'] = {\n  boxSizing: 'border-box',\n  padding: '0'\n}, _unopinionatedRules['[type=\"number\"]::-webkit-inner-spin-button,\\n  [type=\"number\"]::-webkit-outer-spin-button'] = {\n  height: 'auto'\n}, _unopinionatedRules['[type=\"search\"]'] = {\n  '-webkit-appearance': 'textfield',\n  outlineOffset: '-2px'\n}, _unopinionatedRules['[type=\"search\"]::-webkit-search-cancel-button,\\n  [type=\"search\"]::-webkit-search-decoration'] = {\n  '-webkit-appearance': 'none'\n}, _unopinionatedRules['::-webkit-file-upload-button'] = {\n  '-webkit-appearance': 'button',\n  font: 'inherit'\n}, _unopinionatedRules['details,\\n  menu'] = {\n  display: 'block'\n}, _unopinionatedRules.summary = {\n  display: 'list-item'\n}, _unopinionatedRules.canvas = {\n  display: 'inline-block'\n}, _unopinionatedRules.template = {\n  display: 'none'\n}, _unopinionatedRules['[hidden]'] = {\n  display: 'none'\n}, _unopinionatedRules);\n\nfunction mergeRules(baseRules, additionalRules) {\n  var mergedRules = _extends({}, baseRules);\n  Object.keys(additionalRules).forEach(function (key) {\n    if (mergedRules[key]) {\n      mergedRules[key] = _extends({}, mergedRules[key], additionalRules[key]);\n    } else {\n      mergedRules[key] = _extends({}, additionalRules[key]);\n    }\n  });\n  return mergedRules;\n}\n\n/**\n * CSS to normalize abnormalities across browsers (normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *    ...normalize(),\n * }\n *\n * // styled-components usage\n * injectGlobal`${normalize()}`\n *\n * // CSS as JS Output\n *\n * html {\n *   fontFamily: 'sans-serif',\n *   lineHeight: 1.15,\n *   textSizeAdjust: 100%,\n * } ...\n */\nfunction normalize(excludeOpinionated) {\n  if (excludeOpinionated) return unopinionatedRules;\n  return mergeRules(unopinionatedRules, opinionatedRules);\n}\n\n//      \n\n/**\n * CSS to style the placeholder pseudo-element.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...placeholder({'color': 'blue'})\n * }\n *\n * // styled-components usage\n * const div = styled.input`\n *    ${placeholder({'color': 'blue'})}\n * `\n *\n * // CSS as JS Output\n *\n * 'input': {\n *   '&:-moz-placeholder': {\n *     'color': 'blue',\n *   },\n *   '&:-ms-input-placeholder': {\n *     'color': 'blue',\n *   },\n *   '&::-moz-placeholder': {\n *     'color': 'blue',\n *   },\n *   '&::-webkit-input-placeholder': {\n *     'color': 'blue',\n *   },\n * },\n */\n\nfunction placeholder(styles) {\n  var _ref;\n\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '&';\n\n  return _ref = {}, _ref[parent + '::-webkit-input-placeholder'] = _extends({}, styles), _ref[parent + ':-moz-placeholder'] = _extends({}, styles), _ref[parent + '::-moz-placeholder'] = _extends({}, styles), _ref[parent + ':-ms-input-placeholder'] = _extends({}, styles), _ref;\n}\n\nvar _templateObject = /*#__PURE__*/ taggedTemplateLiteralLoose(['radial-gradient(', '', '', '', ')'], ['radial-gradient(', '', '', '', ')']);\n\n//      \n\n/** */\n\nfunction parseFallback(colorStops) {\n  return colorStops[0].split(' ')[0];\n}\n\nfunction constructGradientValue(literals) {\n  var template = '';\n  for (var i = 0; i < literals.length; i += 1) {\n    template += literals[i];\n    // Adds leading coma if properties preceed color-stops\n    if (i === 3 && (arguments.length <= i + 1 ? undefined : arguments[i + 1]) && ((arguments.length <= 1 ? undefined : arguments[1]) || (arguments.length <= 2 ? undefined : arguments[2]) || (arguments.length <= 3 ? undefined : arguments[3]))) {\n      template = template.slice(0, -1);\n      template += ', ' + (arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n      // No trailing space if color-stops is the only param provided\n    } else if (i === 3 && (arguments.length <= i + 1 ? undefined : arguments[i + 1]) && !(arguments.length <= 1 ? undefined : arguments[1]) && !(arguments.length <= 2 ? undefined : arguments[2]) && !(arguments.length <= 3 ? undefined : arguments[3])) {\n      template += '' + (arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n      // Only adds substitution if it is defined\n    } else if (arguments.length <= i + 1 ? undefined : arguments[i + 1]) {\n      template += (arguments.length <= i + 1 ? undefined : arguments[i + 1]) + ' ';\n    }\n  }\n  return template.trim();\n}\n\n/**\n * CSS for declaring a radial gradient, including a fallback background-color. The fallback is either the first color-stop or an explicitly passed fallback color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...radialGradient({\n *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n *     extent: 'farthest-corner at 45px 45px',\n *     position: 'center',\n *     shape: 'ellipse',\n *   })\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${radialGradient({\n *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n *     extent: 'farthest-corner at 45px 45px',\n *     position: 'center',\n *     shape: 'ellipse',\n *   })}\n *`\n *\n * // CSS as JS Output\n *\n * div: {\n *   'backgroundColor': '#00FFFF',\n *   'backgroundImage': 'radial-gradient(center ellipse farthest-corner at 45px 45px, #00FFFF 0%, rgba(0, 0, 255, 0) 50%, #0000FF 95%)',\n * }\n */\n\nfunction radialGradient(_ref) {\n  var colorStops = _ref.colorStops,\n      extent = _ref.extent,\n      fallback = _ref.fallback,\n      position = _ref.position,\n      shape = _ref.shape;\n\n  if (!colorStops || colorStops.length < 2) {\n    throw new Error('radialGradient requries at least 2 color-stops to properly render.');\n  }\n  return {\n    backgroundColor: fallback || parseFallback(colorStops),\n    backgroundImage: constructGradientValue(_templateObject, position, shape, extent, colorStops.join(', '))\n  };\n}\n\n//      \n\n/**\n * A helper to generate a retina background image and non-retina\n * background image. The retina background image will output to a HiDPI media query. The mixin uses\n * a _2x.png filename suffix by default.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *  ...retinaImage('my-img')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${retinaImage('my-img')}\n * `\n *\n * // CSS as JS Output\n * div {\n *   backgroundImage: 'url(my-img.png)',\n *   '@media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n *    only screen and (min--moz-device-pixel-ratio: 1.3),\n *    only screen and (-o-min-device-pixel-ratio: 1.3/1),\n *    only screen and (min-resolution: 144dpi),\n *    only screen and (min-resolution: 1.5dppx)': {\n *     backgroundImage: 'url(my-img_2x.png)',\n *   }\n * }\n */\nfunction retinaImage(filename, backgroundSize) {\n  var extension = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'png';\n\n  var _ref;\n\n  var retinaFilename = arguments[3];\n  var retinaSuffix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '_2x';\n\n  if (!filename) {\n    throw new Error('Please supply a filename to retinaImage() as the first argument.');\n  }\n  // Replace the dot at the beginning of the passed extension if one exists\n  var ext = extension.replace(/^\\./, '');\n  var rFilename = retinaFilename ? retinaFilename + '.' + ext : '' + filename + retinaSuffix + '.' + ext;\n\n  return _ref = {\n    backgroundImage: 'url(' + filename + '.' + ext + ')'\n  }, _ref[hiDPI()] = {\n    backgroundImage: 'url(' + rFilename + ')',\n    backgroundSize: backgroundSize\n  }, _ref;\n}\n\n//      \n\n/**\n * CSS to style the selection pseudo-element.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...selection({\n *     'backgroundColor': 'blue'\n *   }, 'section')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${selection({'backgroundColor': 'blue'}, 'section')}\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'section::-moz-selection': {\n *     'backgroundColor':'blue',\n *   },\n *   'section::selection': {\n *     'backgroundColor': 'blue',\n *   }\n * }\n */\n\nfunction selection(styles) {\n  var _ref;\n\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  return _ref = {}, _ref[parent + '::-moz-selection'] = _extends({}, styles), _ref[parent + '::selection'] = _extends({}, styles), _ref;\n}\n\n//      \n\n/* eslint-disable key-spacing */\nvar functionsMap = {\n  easeInBack: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  easeInCirc: 'cubic-bezier(0.600,  0.040, 0.980, 0.335)',\n  easeInCubic: 'cubic-bezier(0.550,  0.055, 0.675, 0.190)',\n  easeInExpo: 'cubic-bezier(0.950,  0.050, 0.795, 0.035)',\n  easeInQuad: 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n  easeInQuart: 'cubic-bezier(0.895,  0.030, 0.685, 0.220)',\n  easeInQuint: 'cubic-bezier(0.755,  0.050, 0.855, 0.060)',\n  easeInSine: 'cubic-bezier(0.470,  0.000, 0.745, 0.715)',\n\n  easeOutBack: 'cubic-bezier(0.175,  0.885, 0.320, 1.275)',\n  easeOutCubic: 'cubic-bezier(0.215,  0.610, 0.355, 1.000)',\n  easeOutCirc: 'cubic-bezier(0.075,  0.820, 0.165, 1.000)',\n  easeOutExpo: 'cubic-bezier(0.190,  1.000, 0.220, 1.000)',\n  easeOutQuad: 'cubic-bezier(0.250,  0.460, 0.450, 0.940)',\n  easeOutQuart: 'cubic-bezier(0.165,  0.840, 0.440, 1.000)',\n  easeOutQuint: 'cubic-bezier(0.230,  1.000, 0.320, 1.000)',\n  easeOutSine: 'cubic-bezier(0.390,  0.575, 0.565, 1.000)',\n\n  easeInOutBack: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  easeInOutCirc: 'cubic-bezier(0.785,  0.135, 0.150, 0.860)',\n  easeInOutCubic: 'cubic-bezier(0.645,  0.045, 0.355, 1.000)',\n  easeInOutExpo: 'cubic-bezier(1.000,  0.000, 0.000, 1.000)',\n  easeInOutQuad: 'cubic-bezier(0.455,  0.030, 0.515, 0.955)',\n  easeInOutQuart: 'cubic-bezier(0.770,  0.000, 0.175, 1.000)',\n  easeInOutQuint: 'cubic-bezier(0.860,  0.000, 0.070, 1.000)',\n  easeInOutSine: 'cubic-bezier(0.445,  0.050, 0.550, 0.950)'\n  /* eslint-enable key-spacing */\n\n  /** */\n\n  /**\n   * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).\n   *\n   * @example\n   * // Styles as object usage\n   * const styles = {\n   *   'transitionTimingFunction': timingFunctions('easeInQuad')\n   * }\n   *\n   * // styled-components usage\n   *  const div = styled.div`\n   *   transitionTimingFunction: ${timingFunctions('easeInQuad')};\n   * `\n   *\n   * // CSS as JS Output\n   *\n   * 'div': {\n   *   'transitionTimingFunction': 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n   * }\n   */\n\n};function timingFunctions(timingFunction) {\n  return functionsMap[timingFunction];\n}\n\n//      \n\n/** */\n\nvar getBorderWidth = function getBorderWidth(pointingDirection, height, width) {\n  switch (pointingDirection) {\n    case 'top':\n      return '0 ' + width / 2 + 'px ' + height + 'px ' + width / 2 + 'px';\n    case 'left':\n      return height / 2 + 'px ' + width + 'px ' + height / 2 + 'px 0';\n    case 'bottom':\n      return height + 'px ' + width / 2 + 'px 0 ' + width / 2 + 'px';\n    case 'right':\n      return height / 2 + 'px 0 ' + height / 2 + 'px ' + width + 'px';\n\n    default:\n      throw new Error(\"Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\");\n  }\n};\n\n// needed for border-color\nvar reverseDirection = {\n  left: 'Right',\n  right: 'Left',\n  top: 'Bottom',\n  bottom: 'Top'\n\n  /**\n   * CSS to represent triangle with any pointing direction with an optional background color. Accepts number or px values for height and width.\n   *\n   * @example\n   * // Styles as object usage\n   *\n   * const styles = {\n   *   ...triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })\n   * }\n   *\n   *\n   * // styled-components usage\n   * const div = styled.div`\n   *   ${triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })}\n   *\n   *\n   * // CSS as JS Output\n   *\n   * div: {\n   *  'borderColor': 'transparent',\n   *  'borderLeftColor': 'red !important',\n   *  'borderStyle': 'solid',\n   *  'borderWidth': '50px 0 50px 100px',\n   *  'height': '0',\n   *  'width': '0',\n   * }\n   */\n\n};function triangle(_ref) {\n  var _ref2;\n\n  var pointingDirection = _ref.pointingDirection,\n      height = _ref.height,\n      width = _ref.width,\n      foregroundColor = _ref.foregroundColor,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === undefined ? 'transparent' : _ref$backgroundColor;\n\n  var unitlessHeight = parseFloat(height);\n  var unitlessWidth = parseFloat(width);\n  if (isNaN(unitlessHeight) || isNaN(unitlessWidth)) {\n    throw new Error('Passed an invalid value to `height` or `width`. Please provide a pixel based unit');\n  }\n\n  return _ref2 = {\n    borderColor: backgroundColor,\n    width: '0',\n    height: '0',\n    borderWidth: getBorderWidth(pointingDirection, unitlessHeight, unitlessWidth),\n    borderStyle: 'solid'\n  }, _ref2['border' + reverseDirection[pointingDirection] + 'Color'] = foregroundColor + ' !important', _ref2;\n}\n\n//      \n\n/**\n * Provides an easy way to change the `wordWrap` property.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...wordWrap('break-word')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${wordWrap('break-word')}\n * `\n *\n * // CSS as JS Output\n *\n * const styles = {\n *   overflowWrap: 'break-word',\n *   wordWrap: 'break-word',\n *   wordBreak: 'break-all',\n * }\n */\n\nfunction wordWrap() {\n  var wrap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'break-word';\n\n  var wordBreak = wrap === 'break-word' ? 'break-all' : wrap;\n  return {\n    overflowWrap: wrap,\n    wordWrap: wrap,\n    wordBreak: wordBreak\n  };\n}\n\n//      \n\n\nfunction colorToInt(color) {\n  return Math.round(color * 255);\n}\n\nfunction convertToInt(red, green, blue) {\n  return colorToInt(red) + \",\" + colorToInt(green) + \",\" + colorToInt(blue);\n}\n\nfunction hslToRgb(hue, saturation, lightness) {\n  var convert = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : convertToInt;\n\n  if (saturation === 0) {\n    // achromatic\n    return convert(lightness, lightness, lightness);\n  }\n\n  // formular from https://en.wikipedia.org/wiki/HSL_and_HSV\n  var huePrime = hue % 360 / 60;\n  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;\n  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  var lightnessModification = lightness - chroma / 2;\n  var finalRed = red + lightnessModification;\n  var finalGreen = green + lightnessModification;\n  var finalBlue = blue + lightnessModification;\n  return convert(finalRed, finalGreen, finalBlue);\n}\n\n//      \nvar namedColorMap = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '00ffff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '0000ff',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '00ffff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'ff00ff',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '639',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n\n  /**\n   * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n   * @private\n   */\n};function nameToHex(color) {\n  if (typeof color !== 'string') return color;\n  var normalizedColorName = color.toLowerCase();\n  return namedColorMap[normalizedColorName] ? '#' + namedColorMap[normalizedColorName] : color;\n}\n\n//      \nvar hexRegex = /^#[a-fA-F0-9]{6}$/;\nvar reducedHexRegex = /^#[a-fA-F0-9]{3}$/;\nvar rgbRegex = /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/;\nvar rgbaRegex = /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([-+]?[0-9]*[.]?[0-9]+)\\s*\\)$/;\nvar hslRegex = /^hsl\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*\\)$/;\nvar hslaRegex = /^hsla\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*,\\s*([-+]?[0-9]*[.]?[0-9]+)\\s*\\)$/;\n\n/**\n * Returns an RgbColor or RgbaColor object. This utility function is only useful\n * if want to extract a color component. With the color util `toColorString` you\n * can convert a RgbColor or RgbaColor object back to a string.\n *\n * @example\n * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1\n * const color1 = 'rgb(255, 0, 0)';\n * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2\n * const color2 = 'hsla(210, 10%, 40%, 0.75)';\n */\nfunction parseToRgb(color) {\n  if (typeof color !== 'string') {\n    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');\n  }\n  var normalizedColor = nameToHex(color);\n  if (normalizedColor.match(hexRegex)) {\n    return {\n      red: parseInt('' + normalizedColor[1] + normalizedColor[2], 16),\n      green: parseInt('' + normalizedColor[3] + normalizedColor[4], 16),\n      blue: parseInt('' + normalizedColor[5] + normalizedColor[6], 16)\n    };\n  }\n  if (normalizedColor.match(reducedHexRegex)) {\n    return {\n      red: parseInt('' + normalizedColor[1] + normalizedColor[1], 16),\n      green: parseInt('' + normalizedColor[2] + normalizedColor[2], 16),\n      blue: parseInt('' + normalizedColor[3] + normalizedColor[3], 16)\n    };\n  }\n  var rgbMatched = rgbRegex.exec(normalizedColor);\n  if (rgbMatched) {\n    return {\n      red: parseInt('' + rgbMatched[1], 10),\n      green: parseInt('' + rgbMatched[2], 10),\n      blue: parseInt('' + rgbMatched[3], 10)\n    };\n  }\n  var rgbaMatched = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatched) {\n    return {\n      red: parseInt('' + rgbaMatched[1], 10),\n      green: parseInt('' + rgbaMatched[2], 10),\n      blue: parseInt('' + rgbaMatched[3], 10),\n      alpha: parseFloat('' + rgbaMatched[4])\n    };\n  }\n  var hslMatched = hslRegex.exec(normalizedColor);\n  if (hslMatched) {\n    var hue = parseInt('' + hslMatched[1], 10);\n    var saturation = parseInt('' + hslMatched[2], 10) / 100;\n    var lightness = parseInt('' + hslMatched[3], 10) / 100;\n    var rgbColorString = 'rgb(' + hslToRgb(hue, saturation, lightness) + ')';\n    var hslRgbMatched = rgbRegex.exec(rgbColorString);\n    return {\n      red: parseInt('' + hslRgbMatched[1], 10),\n      green: parseInt('' + hslRgbMatched[2], 10),\n      blue: parseInt('' + hslRgbMatched[3], 10)\n    };\n  }\n  var hslaMatched = hslaRegex.exec(normalizedColor);\n  if (hslaMatched) {\n    var _hue = parseInt('' + hslaMatched[1], 10);\n    var _saturation = parseInt('' + hslaMatched[2], 10) / 100;\n    var _lightness = parseInt('' + hslaMatched[3], 10) / 100;\n    var _rgbColorString = 'rgb(' + hslToRgb(_hue, _saturation, _lightness) + ')';\n    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);\n    return {\n      red: parseInt('' + _hslRgbMatched[1], 10),\n      green: parseInt('' + _hslRgbMatched[2], 10),\n      blue: parseInt('' + _hslRgbMatched[3], 10),\n      alpha: parseFloat('' + hslaMatched[4])\n    };\n  }\n  throw new Error(\"Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\");\n}\n\n//      \n\n\nfunction rgbToHsl(color) {\n  // make sure rgb are contained in a set of [0, 255]\n  var red = color.red / 255;\n  var green = color.green / 255;\n  var blue = color.blue / 255;\n\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2;\n\n  if (max === min) {\n    // achromatic\n    if (color.alpha !== undefined) {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness,\n        alpha: color.alpha\n      };\n    } else {\n      return { hue: 0, saturation: 0, lightness: lightness };\n    }\n  }\n\n  var hue = void 0;\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  switch (max) {\n    case red:\n      hue = (green - blue) / delta + (green < blue ? 6 : 0);\n      break;\n    case green:\n      hue = (blue - red) / delta + 2;\n      break;\n    default:\n      // blue case\n      hue = (red - green) / delta + 4;\n      break;\n  }\n\n  hue *= 60;\n  if (color.alpha !== undefined) {\n    return {\n      hue: hue,\n      saturation: saturation,\n      lightness: lightness,\n      alpha: color.alpha\n    };\n  }\n  return { hue: hue, saturation: saturation, lightness: lightness };\n}\n\n//      \n\n/**\n * Returns an HslColor or HslaColor object. This utility function is only useful\n * if want to extract a color component. With the color util `toColorString` you\n * can convert a HslColor or HslaColor object back to a string.\n *\n * @example\n * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1\n * const color1 = 'rgb(255, 0, 0)';\n * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2\n * const color2 = 'hsla(210, 10%, 40%, 0.75)';\n */\nfunction parseToHsl(color) {\n  // Note: At a later stage we can optimize this function as right now a hsl\n  // color would be parsed converted to rgb values and converted back to hsl.\n  return rgbToHsl(parseToRgb(color));\n}\n\n//      \n\n/**\n * Reduces hex values if possible e.g. #ff8866 to #f86\n * @private\n */\nvar reduceHexValue = function reduceHexValue(value) {\n  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {\n    return \"#\" + value[1] + value[3] + value[5];\n  }\n  return value;\n};\n\n//      \nfunction numberToHex(value) {\n  var hex = value.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgb(255, 205, 100),\n *   background: rgb({ red: 255, green: 205, blue: 100 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgb(255, 205, 100)};\n *   background: ${rgb({ red: 255, green: 205, blue: 100 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffcd64\";\n *   background: \"#ffcd64\";\n * }\n */\nfunction rgb(value, green, blue) {\n  if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {\n    return reduceHexValue('#' + numberToHex(value) + numberToHex(green) + numberToHex(blue));\n  } else if (typeof value === 'object' && green === undefined && blue === undefined) {\n    return reduceHexValue('#' + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));\n  }\n\n  throw new Error('Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).');\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgba(255, 205, 100, 0.7),\n *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),\n *   background: rgba(255, 205, 100, 1),\n *   background: rgba('#ffffff', 0.4),\n *   background: rgba('black', 0.7),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgba(255, 205, 100, 0.7)};\n *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};\n *   background: ${rgba(255, 205, 100, 1)};\n *   background: ${rgba('#ffffff', 0.4)};\n *   background: ${rgba('black', 0.7)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(255,205,100,0.7)\";\n *   background: \"rgba(255,205,100,0.7)\";\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,255,255,0.4)\";\n *   background: \"rgba(0,0,0,0.7)\";\n * }\n */\nfunction rgba(firstValue, secondValue, thirdValue, fourthValue) {\n  if (typeof firstValue === 'string' && typeof secondValue === 'number') {\n    var rgbValue = parseToRgb(firstValue);\n    return 'rgba(' + rgbValue.red + ',' + rgbValue.green + ',' + rgbValue.blue + ',' + secondValue + ')';\n  } else if (typeof firstValue === 'number' && typeof secondValue === 'number' && typeof thirdValue === 'number' && typeof fourthValue === 'number') {\n    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : 'rgba(' + firstValue + ',' + secondValue + ',' + thirdValue + ',' + fourthValue + ')';\n  } else if (typeof firstValue === 'object' && secondValue === undefined && thirdValue === undefined && fourthValue === undefined) {\n    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : 'rgba(' + firstValue.red + ',' + firstValue.green + ',' + firstValue.blue + ',' + firstValue.alpha + ')';\n  }\n\n  throw new Error('Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).');\n}\n\n//      \nfunction colorToHex(color) {\n  return numberToHex(Math.round(color * 255));\n}\n\nfunction convertToHex(red, green, blue) {\n  return reduceHexValue('#' + colorToHex(red) + colorToHex(green) + colorToHex(blue));\n}\n\nfunction hslToHex(hue, saturation, lightness) {\n  return hslToRgb(hue, saturation, lightness, convertToHex);\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsl(359, 0.75, 0.4),\n *   background: hsl({ hue: 360, saturation: 0.75, lightness: 0.4 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsl(359, 0.75, 0.4)};\n *   background: ${hsl({ hue: 360, saturation: 0.75, lightness: 0.4 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#b3191c\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsl(value, saturation, lightness) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number') {\n    return hslToHex(value, saturation, lightness);\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined) {\n    return hslToHex(value.hue, value.saturation, value.lightness);\n  }\n\n  throw new Error('Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).');\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsla(359, 0.75, 0.4, 0.7),\n *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),\n *   background: hsla(359, 0.75, 0.4, 1),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsla(359, 0.75, 0.4, 0.7)};\n *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};\n *   background: ${hsla(359, 0.75, 0.4, 1)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsla(value, saturation, lightness, alpha) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number' && typeof alpha === 'number') {\n    return alpha >= 1 ? hslToHex(value, saturation, lightness) : 'rgba(' + hslToRgb(value, saturation, lightness) + ',' + alpha + ')';\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined && alpha === undefined) {\n    return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : 'rgba(' + hslToRgb(value.hue, value.saturation, value.lightness) + ',' + value.alpha + ')';\n  }\n\n  throw new Error('Passed invalid arguments to hsla, please pass multiple numbers e.g. hsl(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).');\n}\n\n//      \nvar isRgb = function isRgb(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isRgba = function isRgba(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && typeof color.alpha === 'number';\n};\n\nvar isHsl = function isHsl(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isHsla = function isHsla(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && typeof color.alpha === 'number';\n};\n\nvar errMsg = 'Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.';\n\n/**\n * Converts a RgbColor, RgbaColor, HslColor or HslaColor object to a color string.\n * This util is useful in case you only know on runtime which color object is\n * used. Otherwise we recommend to rely on `rgb`, `rgba`, `hsl` or `hsla`.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: toColorString({ red: 255, green: 205, blue: 100 }),\n *   background: toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),\n *   background: toColorString({ hue: 240, saturation: 1, lightness: 0.5 }),\n *   background: toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${toColorString({ red: 255, green: 205, blue: 100 })};\n *   background: ${toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};\n *   background: ${toColorString({ hue: 240, saturation: 1, lightness: 0.5 })};\n *   background: ${toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,205,100,0.72)\";\n *   background: \"#00f\";\n *   background: \"rgba(179,25,25,0.72)\";\n * }\n */\n\nfunction toColorString(color) {\n  if (typeof color !== 'object') throw new Error(errMsg);\n  if (isRgba(color)) return rgba(color);\n  if (isRgb(color)) return rgb(color);\n  if (isHsla(color)) return hsla(color);\n  if (isHsl(color)) return hsl(color);\n\n  throw new Error(errMsg);\n}\n\n//      \n\n// Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n// eslint-disable-next-line no-unused-vars\n\n// eslint-disable-next-line no-redeclare\n\n\nfunction curried(f, length, acc) {\n  return function fn() {\n    // eslint-disable-next-line prefer-rest-params\n    var combined = acc.concat(Array.prototype.slice.call(arguments));\n    return combined.length >= length ? f.apply(this, combined) : curried(f, length, combined);\n  };\n}\n\n// eslint-disable-next-line no-redeclare\nfunction curry(f) {\n  // eslint-disable-line no-redeclare\n  return curried(f, f.length, []);\n}\n\n//      \n\n/**\n * Changes the hue of the color. Hue is a number between 0 to 360. The first\n * argument for adjustHue is the amount of degrees the color is rotated along\n * the color wheel.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: adjustHue(180, '#448'),\n *   background: adjustHue(180, 'rgba(101,100,205,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${adjustHue(180, '#448')};\n *   background: ${adjustHue(180, 'rgba(101,100,205,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#888844\";\n *   background: \"rgba(136,136,68,0.7)\";\n * }\n */\nfunction adjustHue(degree, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    hue: (hslColor.hue + degree) % 360\n  }));\n}\n\nvar curriedAdjustHue = /*#__PURE__*/curry(adjustHue);\n\n//      \n\n/**\n * Returns the complement of the provided color. This is identical to adjustHue(180, <color>).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: complement('#448'),\n *   background: complement('rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${complement('#448')};\n *   background: ${complement('rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#884\";\n *   background: \"rgba(153,153,153,0.7)\";\n * }\n */\nfunction complement(color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    hue: (hslColor.hue + 180) % 360\n  }));\n}\n\n//      \n\nfunction guard(lowerBoundary, upperBoundary, value) {\n  return Math.max(lowerBoundary, Math.min(upperBoundary, value));\n}\n\n//      \n\n/**\n * Returns a string value for the darkened color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: darken(0.2, '#FFCD64'),\n *   background: darken(0.2, 'rgba(255,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${darken(0.2, '#FFCD64')};\n *   background: ${darken(0.2, 'rgba(255,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffbd31\";\n *   background: \"rgba(255,189,49,0.7)\";\n * }\n */\nfunction darken(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    lightness: guard(0, 1, hslColor.lightness - amount)\n  }));\n}\n\nvar curriedDarken = /*#__PURE__*/curry(darken);\n\n//      \n\n/**\n * Decreases the intensity of a color. Its range is between 0 to 1. The first\n * argument of the desaturate function is the amount by how much the color\n * intensity should be decreased.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: desaturate(0.2, '#CCCD64'),\n *   background: desaturate(0.2, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${desaturate(0.2, '#CCCD64')};\n *   background: ${desaturate(0.2, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#b8b979\";\n *   background: \"rgba(184,185,121,0.7)\";\n * }\n */\nfunction desaturate(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    saturation: guard(0, 1, hslColor.saturation - amount)\n  }));\n}\n\nvar curriedDesaturate = /*#__PURE__*/curry(desaturate);\n\n//      \n/**\n * Returns a number (float) representing the luminance of a color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff',\n *   background: getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)',\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff'};\n *   background: ${getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)'};\n *\n * // CSS in JS Output\n *\n * div {\n *   background: \"#CCCD64\";\n *   background: \"rgba(58, 133, 255, 1)\";\n * }\n */\nfunction getLuminance(color) {\n  var rgbColor = parseToRgb(color);\n\n  var _Object$keys$map = Object.keys(rgbColor).map(function (key) {\n    var channel = rgbColor[key] / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }),\n      r = _Object$keys$map[0],\n      g = _Object$keys$map[1],\n      b = _Object$keys$map[2];\n\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\n//      \n\n/**\n * Converts the color to a grayscale, by reducing its saturation to 0.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: grayscale('#CCCD64'),\n *   background: grayscale('rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${grayscale('#CCCD64')};\n *   background: ${grayscale('rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#999\";\n *   background: \"rgba(153,153,153,0.7)\";\n * }\n */\nfunction grayscale(color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    saturation: 0\n  }));\n}\n\n//      \n\n/**\n * Inverts the red, green and blue values of a color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: invert('#CCCD64'),\n *   background: invert('rgba(101,100,205,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${invert('#CCCD64')};\n *   background: ${invert('rgba(101,100,205,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#33329b\";\n *   background: \"rgba(154,155,50,0.7)\";\n * }\n */\nfunction invert(color) {\n  // parse color string to rgb\n  var value = parseToRgb(color);\n  return toColorString(_extends({}, value, {\n    red: 255 - value.red,\n    green: 255 - value.green,\n    blue: 255 - value.blue\n  }));\n}\n\n//      \n\n/**\n * Returns a string value for the lightened color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: lighten(0.2, '#CCCD64'),\n *   background: lighten(0.2, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${lighten(0.2, '#FFCD64')};\n *   background: ${lighten(0.2, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#e5e6b1\";\n *   background: \"rgba(229,230,177,0.7)\";\n * }\n */\nfunction lighten(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    lightness: guard(0, 1, hslColor.lightness + amount)\n  }));\n}\n\nvar curriedLighten = /*#__PURE__*/curry(lighten);\n\n//      \n\n/**\n * Mixes two colors together by calculating the average of each of the RGB components.\n *\n * By default the weight is 0.5 meaning that half of the first color and half the second\n * color should be used. Optionally the weight can be modified by providing a number\n * as the first argument. 0.25 means that a quarter of the first color and three quarters\n * of the second color should be used.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: mix(0.5, '#f00', '#00f')\n *   background: mix(0.25, '#f00', '#00f')\n *   background: mix(0.5, 'rgba(255, 0, 0, 0.5)', '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${mix(0.5, '#f00', '#00f')};\n *   background: ${mix(0.25, '#f00', '#00f')};\n *   background: ${mix(0.5, 'rgba(255, 0, 0, 0.5)', '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#7f007f\";\n *   background: \"#3f00bf\";\n *   background: \"rgba(63, 0, 191, 0.75)\";\n * }\n */\nfunction mix() {\n  var weight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n  var color = arguments[1];\n  var otherColor = arguments[2];\n\n  var parsedColor1 = parseToRgb(color);\n  var color1 = _extends({}, parsedColor1, {\n    alpha: typeof parsedColor1.alpha === 'number' ? parsedColor1.alpha : 1\n  });\n\n  var parsedColor2 = parseToRgb(otherColor);\n  var color2 = _extends({}, parsedColor2, {\n    alpha: typeof parsedColor2.alpha === 'number' ? parsedColor2.alpha : 1\n\n    // The formular is copied from the original Sass implementation:\n    // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  });var alphaDelta = color1.alpha - color2.alpha;\n  var x = weight * 2 - 1;\n  var y = x * alphaDelta === -1 ? x : x + alphaDelta;\n  var z = 1 + x * alphaDelta;\n  var weight1 = (y / z + 1) / 2.0;\n  var weight2 = 1 - weight1;\n\n  var mixedColor = {\n    red: Math.floor(color1.red * weight1 + color2.red * weight2),\n    green: Math.floor(color1.green * weight1 + color2.green * weight2),\n    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),\n    alpha: color1.alpha + (color2.alpha - color1.alpha) * (weight / 1.0)\n  };\n\n  return rgba(mixedColor);\n}\n\nvar curriedMix = /*#__PURE__*/curry(mix);\n\n//      \n/**\n * Increases the opacity of a color. Its range for the amount is between 0 to 1.\n *\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: opacify(0.1, 'rgba(255, 255, 255, 0.9)');\n *   background: opacify(0.2, 'hsla(0, 0%, 100%, 0.5)'),\n *   background: opacify(0.5, 'rgba(255, 0, 0, 0.2)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${opacify(0.1, 'rgba(255, 255, 255, 0.9)')};\n *   background: ${opacify(0.2, 'hsla(0, 0%, 100%, 0.5)')},\n *   background: ${opacify(0.5, 'rgba(255, 0, 0, 0.2)')},\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#fff\";\n *   background: \"rgba(255,255,255,0.7)\";\n *   background: \"rgba(255,0,0,0.7)\";\n * }\n */\nfunction opacify(amount, color) {\n  var parsedColor = parseToRgb(color);\n  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;\n  var colorWithAlpha = _extends({}, parsedColor, {\n    alpha: guard(0, 1, (alpha * 100 + amount * 100) / 100)\n  });\n  return rgba(colorWithAlpha);\n}\n\nvar curriedOpacify = /*#__PURE__*/curry(opacify);\n\n//      \n/**\n * Selects black or white for best contrast depending on the luminosity of the given color.\n * Follows W3C specs for readability at https://www.w3.org/TR/WCAG20-TECHS/G18.html\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   color: readableColor('#000'),\n *   color: readableColor('papayawhip'),\n *   color: readableColor('rgb(255,0,0)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   color: ${readableColor('#000')};\n *   color: ${readableColor('papayawhip')};\n *   color: ${readableColor('rgb(255,0,0)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   color: \"#fff\";\n *   color: \"#fff\";\n *   color: \"#000\";\n * }\n */\n\nfunction readableColor(color) {\n  return getLuminance(color) > 0.179 ? '#000' : '#fff';\n}\n\nvar curriedReadableColor = /*#__PURE__*/curry(readableColor);\n\n//      \n\n/**\n * Increases the intensity of a color. Its range is between 0 to 1. The first\n * argument of the saturate function is the amount by how much the color\n * intensity should be increased.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: saturate(0.2, '#CCCD64'),\n *   background: saturate(0.2, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${saturate(0.2, '#FFCD64')};\n *   background: ${saturate(0.2, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#e0e250\";\n *   background: \"rgba(224,226,80,0.7)\";\n * }\n */\nfunction saturate(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    saturation: guard(0, 1, hslColor.saturation + amount)\n  }));\n}\n\nvar curriedSaturate = /*#__PURE__*/curry(saturate);\n\n//      \n\n/**\n * Sets the hue of a color to the provided value. The hue range can be\n * from 0 and 359.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setHue(42, '#CCCD64'),\n *   background: setHue(244, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setHue(42, '#CCCD64')};\n *   background: ${setHue(244, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#cdae64\";\n *   background: \"rgba(107,100,205,0.7)\";\n * }\n */\nfunction setHue(hue, color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    hue: hue\n  }));\n}\n\nvar curriedSetHue = /*#__PURE__*/curry(setHue);\n\n//      \n\n/**\n * Sets the lightness of a color to the provided value. The lightness range can be\n * from 0 and 1.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setLightness(0.2, '#CCCD64'),\n *   background: setLightness(0.75, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setLightness(0.2, '#CCCD64')};\n *   background: ${setLightness(0.75, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#4d4d19\";\n *   background: \"rgba(223,224,159,0.7)\";\n * }\n */\nfunction setLightness(lightness, color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    lightness: lightness\n  }));\n}\n\nvar curriedSetLightness = /*#__PURE__*/curry(setLightness);\n\n//      \n\n/**\n * Sets the saturation of a color to the provided value. The lightness range can be\n * from 0 and 1.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setSaturation(0.2, '#CCCD64'),\n *   background: setSaturation(0.75, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setSaturation(0.2, '#CCCD64')};\n *   background: ${setSaturation(0.75, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#adad84\";\n *   background: \"rgba(228,229,76,0.7)\";\n * }\n */\nfunction setSaturation(saturation, color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    saturation: saturation\n  }));\n}\n\nvar curriedSetSaturation = /*#__PURE__*/curry(setSaturation);\n\n//      \n\n/**\n * Shades a color by mixing it with black. `shade` can produce\n * hue shifts, where as `darken` manipulates the luminance channel and therefore\n * doesn't produce hue shifts.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: shade(0.25, '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${shade(0.25, '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#00003f\";\n * }\n */\n\nfunction shade(percentage, color) {\n  if (typeof percentage !== 'number' || percentage > 1 || percentage < -1) {\n    throw new Error('Passed an incorrect argument to shade, please pass a percentage less than or equal to 1 and larger than or equal to -1.');\n  }\n  if (typeof color !== 'string') {\n    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');\n  }\n  return curriedMix(percentage, color, 'rgb(0, 0, 0)');\n}\n\nvar curriedShade = /*#__PURE__*/curry(shade);\n\n//      \n\n/**\n * Tints a color by mixing it with white. `tint` can produce\n * hue shifts, where as `lighten` manipulates the luminance channel and therefore\n * doesn't produce hue shifts.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: tint(0.25, '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${tint(0.25, '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#bfbfff\";\n * }\n */\n\nfunction tint(percentage, color) {\n  if (typeof percentage !== 'number' || percentage > 1 || percentage < -1) {\n    throw new Error('Passed an incorrect argument to tint, please pass a percentage less than or equal to 1 and larger than or equal to -1.');\n  }\n  if (typeof color !== 'string') {\n    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');\n  }\n  return curriedMix(percentage, color, 'rgb(255, 255, 255)');\n}\n\nvar curriedTint = /*#__PURE__*/curry(tint);\n\n//      \n/**\n * Decreases the opacity of a color. Its range for the amount is between 0 to 1.\n *\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: transparentize(0.1, '#fff');\n *   background: transparentize(0.2, 'hsl(0, 0%, 100%)'),\n *   background: transparentize(0.5, 'rgba(255, 0, 0, 0.8)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${transparentize(0.1, '#fff')};\n *   background: ${transparentize(0.2, 'hsl(0, 0%, 100%)')},\n *   background: ${transparentize(0.5, 'rgba(255, 0, 0, 0.8)')},\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(255,255,255,0.9)\";\n *   background: \"rgba(255,255,255,0.8)\";\n *   background: \"rgba(255,0,0,0.3)\";\n * }\n */\nfunction transparentize(amount, color) {\n  var parsedColor = parseToRgb(color);\n  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;\n  var colorWithAlpha = _extends({}, parsedColor, {\n    alpha: guard(0, 1, (alpha * 100 - amount * 100) / 100)\n  });\n  return rgba(colorWithAlpha);\n}\n\nvar curriedTransparentize = /*#__PURE__*/curry(transparentize);\n\n//      \n\n/** */\n\n/**\n * Shorthand for easily setting the animation property. Allows either multiple arrays with animations\n * or a single animation spread over the arguments.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out, colorchange 2s'\n * }\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation('rotate', '1s', 'ease-in-out')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation('rotate', '1s', 'ease-in-out')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out'\n * }\n */\nfunction animation() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Allow single or multiple animations passed\n  var multiMode = Array.isArray(args[0]);\n  if (!multiMode && args.length > 8) {\n    throw new Error('The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation');\n  }\n  var code = args.map(function (arg) {\n    if (multiMode && !Array.isArray(arg) || !multiMode && Array.isArray(arg)) {\n      throw new Error(\"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\");\n    }\n    if (Array.isArray(arg) && arg.length > 8) {\n      throw new Error('The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation');\n    }\n\n    return Array.isArray(arg) ? arg.join(' ') : arg;\n  }).join(', ');\n\n  return {\n    animation: code\n  };\n}\n\n//      \n\n/**\n * Shorthand that accepts any number of backgroundImage values as parameters for creating a single background statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...backgroundImages('url(\"/image/background.jpg\")', 'linear-gradient(red, green)')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${backgroundImages('url(\"/image/background.jpg\")', 'linear-gradient(red, green)')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'backgroundImage': 'url(\"/image/background.jpg\"), linear-gradient(red, green)'\n * }\n */\n\nfunction backgroundImages() {\n  for (var _len = arguments.length, properties = Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    backgroundImage: properties.join(', ')\n  };\n}\n\n//      \n\n/**\n * Shorthand that accepts any number of background values as parameters for creating a single background statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...backgrounds('url(\"/image/background.jpg\")', 'linear-gradient(red, green)', 'center no-repeat')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${backgrounds('url(\"/image/background.jpg\")', 'linear-gradient(red, green)', 'center no-repeat')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'background': 'url(\"/image/background.jpg\"), linear-gradient(red, green), center no-repeat'\n * }\n */\nfunction backgrounds() {\n  for (var _len = arguments.length, properties = Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    background: properties.join(', ')\n  };\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderColor('red', 'green', 'blue', 'yellow')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderColor('red', 'green', 'blue', 'yellow')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopColor': 'red',\n *   'borderRightColor': 'green',\n *   'borderBottomColor': 'blue',\n *   'borderLeftColor': 'yellow'\n * }\n */\n\nfunction borderColor() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['borderColor'].concat(values));\n}\n\n//      \n/**\n * Shorthand that accepts a value for side and a value for radius and applies the radius value to both corners of the side.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderRadius('top', '5px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderRadius('top', '5px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopRightRadius': '5px',\n *   'borderTopLeftRadius': '5px',\n * }\n */\n\nfunction borderRadius(side, radius) {\n  var uppercaseSide = capitalizeString(side);\n  if (!radius && radius !== 0) {\n    throw new Error('borderRadius expects a radius value as a string or number as the second argument.');\n  }\n  if (uppercaseSide === 'Top' || uppercaseSide === 'Bottom') {\n    var _ref;\n\n    return _ref = {}, _ref['border' + uppercaseSide + 'RightRadius'] = radius, _ref['border' + uppercaseSide + 'LeftRadius'] = radius, _ref;\n  }\n\n  if (uppercaseSide === 'Left' || uppercaseSide === 'Right') {\n    var _ref2;\n\n    return _ref2 = {}, _ref2['borderTop' + uppercaseSide + 'Radius'] = radius, _ref2['borderBottom' + uppercaseSide + 'Radius'] = radius, _ref2;\n  }\n\n  throw new Error('borderRadius expects one of \"top\", \"bottom\", \"left\" or \"right\" as the first argument.');\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderStyle('solid', 'dashed', 'dotted', 'double')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderStyle('solid', 'dashed', 'dotted', 'double')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopStyle': 'solid',\n *   'borderRightStyle': 'dashed',\n *   'borderBottomStyle': 'dotted',\n *   'borderLeftStyle': 'double'\n * }\n */\n\nfunction borderStyle() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['borderStyle'].concat(values));\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderWidth('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderWidth('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopWidth': '12px',\n *   'borderRightWidth': '24px',\n *   'borderBottomWidth': '36px',\n *   'borderLeftWidth': '48px'\n * }\n */\nfunction borderWidth() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['borderWidth'].concat(values));\n}\n\n//      \n\n\nfunction generateSelectors(template, state) {\n  var stateSuffix = state ? ':' + state : '';\n  return template(stateSuffix);\n}\n\n/**\n * Function helper that adds an array of states to a template of selectors. Used in textInputs and buttons.\n * @private\n */\nfunction statefulSelectors(states, template, stateMap) {\n  if (!template) throw new Error('You must provide a template to this method.');\n  if (states.length === 0) return generateSelectors(template, null);\n  var selectors = [];\n  for (var i = 0; i < states.length; i += 1) {\n    if (stateMap && stateMap.indexOf(states[i]) < 0) {\n      throw new Error('You passed an unsupported selector state to this method.');\n    }\n    selectors.push(generateSelectors(template, states[i]));\n  }\n  selectors = selectors.join(',');\n  return selectors;\n}\n\n//      \nvar stateMap = [undefined, null, 'active', 'focus', 'hover'];\n\nfunction template(state) {\n  return 'button' + state + ',\\n  input[type=\"button\"]' + state + ',\\n  input[type=\"reset\"]' + state + ',\\n  input[type=\"submit\"]' + state;\n}\n\n/**\n * Populates selectors that target all buttons. You can pass optional states to append to the selectors.\n * @example\n * // Styles as object usage\n * const styles = {\n *   [buttons('active')]: {\n *     'border': 'none'\n *   }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   > ${buttons('active')} {\n *     border: none;\n *   }\n * `\n *\n * // CSS in JS Output\n *\n *  'button:active,\n *  'input[type=\"button\"]:active,\n *  'input[type=\\\"reset\\\"]:active,\n *  'input[type=\\\"submit\\\"]:active: {\n *   'border': 'none'\n * }\n */\n\nfunction buttons() {\n  for (var _len = arguments.length, states = Array(_len), _key = 0; _key < _len; _key++) {\n    states[_key] = arguments[_key];\n  }\n\n  return statefulSelectors(states, template, stateMap);\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...margin('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${margin('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'marginTop': '12px',\n *   'marginRight': '24px',\n *   'marginBottom': '36px',\n *   'marginLeft': '48px'\n * }\n */\n\nfunction margin() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['margin'].concat(values));\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...padding('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${padding('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'paddingTop': '12px',\n *   'paddingRight': '24px',\n *   'paddingBottom': '36px',\n *   'paddingLeft': '48px'\n * }\n */\n\nfunction padding() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['padding'].concat(values));\n}\n\n//      \nvar positionMap$1 = ['absolute', 'fixed', 'relative', 'static', 'sticky'];\n\n/**\n * Shorthand accepts up to five values, including null to skip a value, and maps them to their respective directions. The first value can optionally be a position keyword.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...position('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${position('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'top': '12px',\n *   'right': '24px',\n *   'bottom': '36px',\n *   'left': '48px'\n * }\n *\n * // Styles as object usage\n * const styles = {\n *   ...position('absolute', '12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${position('absolute', '12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'position': 'absolute',\n *   'top': '12px',\n *   'right': '24px',\n *   'bottom': '36px',\n *   'left': '48px'\n * }\n */\n\nfunction position(positionKeyword) {\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  if (positionMap$1.indexOf(positionKeyword) >= 0) {\n    return _extends({\n      position: positionKeyword\n    }, directionalProperty.apply(undefined, [''].concat(values)));\n  } else {\n    var firstValue = positionKeyword; // in this case position is actually the first value\n    return directionalProperty.apply(undefined, ['', firstValue].concat(values));\n  }\n}\n\n//      \n\n/**\n * Shorthand to set the height and width properties in a single statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...size('300px', '250px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${size('300px', '250px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'height': '300px',\n *   'width': '250px',\n * }\n */\n\nfunction size(height) {\n  var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : height;\n\n  return {\n    height: height,\n    width: width\n  };\n}\n\n//      \nvar stateMap$1 = [undefined, null, 'active', 'focus', 'hover'];\n\nfunction template$1(state) {\n  return 'input[type=\"color\"]' + state + ',\\n    input[type=\"date\"]' + state + ',\\n    input[type=\"datetime\"]' + state + ',\\n    input[type=\"datetime-local\"]' + state + ',\\n    input[type=\"email\"]' + state + ',\\n    input[type=\"month\"]' + state + ',\\n    input[type=\"number\"]' + state + ',\\n    input[type=\"password\"]' + state + ',\\n    input[type=\"search\"]' + state + ',\\n    input[type=\"tel\"]' + state + ',\\n    input[type=\"text\"]' + state + ',\\n    input[type=\"time\"]' + state + ',\\n    input[type=\"url\"]' + state + ',\\n    input[type=\"week\"]' + state + ',\\n    input:not([type])' + state + ',\\n    textarea' + state;\n}\n\n/**\n * Populates selectors that target all text inputs. You can pass optional states to append to the selectors.\n * @example\n * // Styles as object usage\n * const styles = {\n *   [textInputs('active')]: {\n *     'border': 'none'\n *   }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   > ${textInputs('active')} {\n *     border: none;\n *   }\n * `\n *\n * // CSS in JS Output\n *\n *  'input[type=\"color\"]:active,\n *  input[type=\"date\"]:active,\n *  input[type=\"datetime\"]:active,\n *  input[type=\"datetime-local\"]:active,\n *  input[type=\"email\"]:active,\n *  input[type=\"month\"]:active,\n *  input[type=\"number\"]:active,\n *  input[type=\"password\"]:active,\n *  input[type=\"search\"]:active,\n *  input[type=\"tel\"]:active,\n *  input[type=\"text\"]:active,\n *  input[type=\"time\"]:active,\n *  input[type=\"url\"]:active,\n *  input[type=\"week\"]:active,\n *  input:not([type]):active,\n *  textarea:active': {\n *   'border': 'none'\n * }\n */\n\nfunction textInputs() {\n  for (var _len = arguments.length, states = Array(_len), _key = 0; _key < _len; _key++) {\n    states[_key] = arguments[_key];\n  }\n\n  return statefulSelectors(states, template$1, stateMap$1);\n}\n\n//      \n\n/**\n * Shorthand that accepts any number of transition values as parameters for creating a single transition statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'transition': 'opacity 1.0s ease-in 0s, width 2.0s ease-in 2s'\n * }\n */\n\nfunction transitions() {\n  for (var _len = arguments.length, properties = Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    transition: properties.join(', ')\n  };\n}\n\n//      \n// Helpers\n// Mixins\n// Color\n// Shorthands\n\nexport { curriedAdjustHue as adjustHue, animation, backgroundImages, backgrounds, borderColor, borderRadius, borderStyle, borderWidth, buttons, clearFix, complement, curriedDarken as darken, curriedDesaturate as desaturate, directionalProperty, ellipsis, em, fontFace, getLuminance, grayscale, invert, hideText, hideVisually, hiDPI, hsl, hsla, curriedLighten as lighten, margin, curriedMix as mix, modularScale, normalize, curriedOpacify as opacify, padding, parseToHsl, parseToRgb, placeholder, position, radialGradient, curriedReadableColor as readableColor, rem, retinaImage, rgb, rgba, curriedSaturate as saturate, selection, curriedSetHue as setHue, curriedSetLightness as setLightness, curriedSetSaturation as setSaturation, curriedShade as shade, size, stripUnit, textInputs, timingFunctions, curriedTint as tint, toColorString, transitions, curriedTransparentize as transparentize, triangle, wordWrap };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/polished/dist/polished.es.js\n// module id = ./node_modules/polished/dist/polished.es.js\n// module chunks = 5","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _PropTypes = require('./PropTypes');\n\nvar _PropTypes2 = _interopRequireDefault(_PropTypes);\n\nvar _describe = require('./describe');\n\nvar _describe2 = _interopRequireDefault(_describe);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.PropTypes = _PropTypes2.default;\nexports.describe = _describe2.default;\n\nexports.default = {\n  describe: _describe2.default,\n  PropTypes: _PropTypes2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-desc/lib/index.js\n// module id = ./node_modules/react-desc/lib/index.js\n// module chunks = 5","import React from 'react';\nimport { Box, Select, FormField } from 'grommet';\nimport Layout from '../components/layout';\n\nlet people = [];\nclass Index extends React.Component {\n\n  render() {\n    return (\n      <Layout>\n        <Box direction='column' align='center'>\n          <Select\n            \n          />\n        </Box>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappingslxHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChdtBA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;AAZA;AACA;AAcA;AAAA;;;;;;;;;;;;AAhBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}